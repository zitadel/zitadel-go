// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/settings/v2beta/lockout_settings.proto

package settings

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockoutSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPasswordAttempts uint64 `protobuf:"varint,1,opt,name=max_password_attempts,json=maxPasswordAttempts,proto3" json:"max_password_attempts,omitempty"`
	// resource_owner_type returns if the settings is managed on the organization or on the instance
	ResourceOwnerType ResourceOwnerType `protobuf:"varint,2,opt,name=resource_owner_type,json=resourceOwnerType,proto3,enum=zitadel.settings.v2beta.ResourceOwnerType" json:"resource_owner_type,omitempty"`
	MaxOtpAttempts    uint64            `protobuf:"varint,3,opt,name=max_otp_attempts,json=maxOtpAttempts,proto3" json:"max_otp_attempts,omitempty"`
}

func (x *LockoutSettings) Reset() {
	*x = LockoutSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_v2beta_lockout_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockoutSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockoutSettings) ProtoMessage() {}

func (x *LockoutSettings) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_v2beta_lockout_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockoutSettings.ProtoReflect.Descriptor instead.
func (*LockoutSettings) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_v2beta_lockout_settings_proto_rawDescGZIP(), []int{0}
}

func (x *LockoutSettings) GetMaxPasswordAttempts() uint64 {
	if x != nil {
		return x.MaxPasswordAttempts
	}
	return 0
}

func (x *LockoutSettings) GetResourceOwnerType() ResourceOwnerType {
	if x != nil {
		return x.ResourceOwnerType
	}
	return ResourceOwnerType_RESOURCE_OWNER_TYPE_UNSPECIFIED
}

func (x *LockoutSettings) GetMaxOtpAttempts() uint64 {
	if x != nil {
		return x.MaxOtpAttempts
	}
	return 0
}

var File_zitadel_settings_v2beta_lockout_settings_proto protoreflect.FileDescriptor

var file_zitadel_settings_v2beta_lockout_settings_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x17, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe3, 0x05, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x89, 0x02, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0xd4, 0x01, 0x92, 0x41, 0xd0, 0x01, 0x32, 0xc7, 0x01, 0x4d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x20,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x20, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x20, 0x67, 0x65, 0x74, 0x73, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x2e, 0x20, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x6f, 0x6f, 0x6e, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x20, 0x6f,
	0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x73, 0x65, 0x74, 0x20,
	0x74, 0x6f, 0x20, 0x30, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x20, 0x62, 0x65, 0x20, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x2e, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x13, 0x6d, 0x61,
	0x78, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x12, 0xbe, 0x01, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x62, 0x92, 0x41, 0x5f,
	0x32, 0x5d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x69, 0x73,
	0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20,
	0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x82, 0x02, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x74, 0x70, 0x5f, 0x61,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0xd7, 0x01,
	0x92, 0x41, 0xd3, 0x01, 0x32, 0xca, 0x01, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x4f, 0x54, 0x50, 0x20,
	0x74, 0x79, 0x70, 0x65, 0x20, 0x28, 0x54, 0x4f, 0x54, 0x50, 0x2c, 0x20, 0x53, 0x4d, 0x53, 0x2c,
	0x20, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x29, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x67, 0x65, 0x74, 0x73, 0x20,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x2e, 0x20, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x20, 0x61, 0x72, 0x65, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x6f,
	0x6f, 0x6e, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4f, 0x54, 0x50, 0x20, 0x69, 0x73,
	0x20, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x6c, 0x79, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c,
	0x20, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x2e, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x4f, 0x74, 0x70, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_settings_v2beta_lockout_settings_proto_rawDescOnce sync.Once
	file_zitadel_settings_v2beta_lockout_settings_proto_rawDescData = file_zitadel_settings_v2beta_lockout_settings_proto_rawDesc
)

func file_zitadel_settings_v2beta_lockout_settings_proto_rawDescGZIP() []byte {
	file_zitadel_settings_v2beta_lockout_settings_proto_rawDescOnce.Do(func() {
		file_zitadel_settings_v2beta_lockout_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_settings_v2beta_lockout_settings_proto_rawDescData)
	})
	return file_zitadel_settings_v2beta_lockout_settings_proto_rawDescData
}

var file_zitadel_settings_v2beta_lockout_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_zitadel_settings_v2beta_lockout_settings_proto_goTypes = []interface{}{
	(*LockoutSettings)(nil), // 0: zitadel.settings.v2beta.LockoutSettings
	(ResourceOwnerType)(0),  // 1: zitadel.settings.v2beta.ResourceOwnerType
}
var file_zitadel_settings_v2beta_lockout_settings_proto_depIdxs = []int32{
	1, // 0: zitadel.settings.v2beta.LockoutSettings.resource_owner_type:type_name -> zitadel.settings.v2beta.ResourceOwnerType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_zitadel_settings_v2beta_lockout_settings_proto_init() }
func file_zitadel_settings_v2beta_lockout_settings_proto_init() {
	if File_zitadel_settings_v2beta_lockout_settings_proto != nil {
		return
	}
	file_zitadel_settings_v2beta_settings_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zitadel_settings_v2beta_lockout_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockoutSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_settings_v2beta_lockout_settings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_settings_v2beta_lockout_settings_proto_goTypes,
		DependencyIndexes: file_zitadel_settings_v2beta_lockout_settings_proto_depIdxs,
		MessageInfos:      file_zitadel_settings_v2beta_lockout_settings_proto_msgTypes,
	}.Build()
	File_zitadel_settings_v2beta_lockout_settings_proto = out.File
	file_zitadel_settings_v2beta_lockout_settings_proto_rawDesc = nil
	file_zitadel_settings_v2beta_lockout_settings_proto_goTypes = nil
	file_zitadel_settings_v2beta_lockout_settings_proto_depIdxs = nil
}
