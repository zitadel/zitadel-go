// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/analytics/v2beta/telemetry.proto

package analytics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountParentType int32

const (
	CountParentType_COUNT_PARENT_TYPE_UNSPECIFIED  CountParentType = 0
	CountParentType_COUNT_PARENT_TYPE_INSTANCE     CountParentType = 1
	CountParentType_COUNT_PARENT_TYPE_ORGANIZATION CountParentType = 2
)

// Enum value maps for CountParentType.
var (
	CountParentType_name = map[int32]string{
		0: "COUNT_PARENT_TYPE_UNSPECIFIED",
		1: "COUNT_PARENT_TYPE_INSTANCE",
		2: "COUNT_PARENT_TYPE_ORGANIZATION",
	}
	CountParentType_value = map[string]int32{
		"COUNT_PARENT_TYPE_UNSPECIFIED":  0,
		"COUNT_PARENT_TYPE_INSTANCE":     1,
		"COUNT_PARENT_TYPE_ORGANIZATION": 2,
	}
)

func (x CountParentType) Enum() *CountParentType {
	p := new(CountParentType)
	*p = x
	return p
}

func (x CountParentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountParentType) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_analytics_v2beta_telemetry_proto_enumTypes[0].Descriptor()
}

func (CountParentType) Type() protoreflect.EnumType {
	return &file_zitadel_analytics_v2beta_telemetry_proto_enumTypes[0]
}

func (x CountParentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CountParentType.Descriptor instead.
func (CountParentType) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_analytics_v2beta_telemetry_proto_rawDescGZIP(), []int{0}
}

type InstanceInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The custom domains (incl. generated ones) of the instance.
	Domains []string `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	// The creation date of the instance.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *InstanceInformation) Reset() {
	*x = InstanceInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_analytics_v2beta_telemetry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInformation) ProtoMessage() {}

func (x *InstanceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_analytics_v2beta_telemetry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInformation.ProtoReflect.Descriptor instead.
func (*InstanceInformation) Descriptor() ([]byte, []int) {
	return file_zitadel_analytics_v2beta_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *InstanceInformation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstanceInformation) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *InstanceInformation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ResourceCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the instance for which the resource counts are reported.
	InstanceId string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The parent type of the resource counts (e.g. organization or instance).
	// For example, reporting the amount of users per organization would use
	// `COUNT_PARENT_TYPE_ORGANIZATION` as parent type and the organization ID as parent ID.
	ParentType CountParentType `protobuf:"varint,4,opt,name=parent_type,json=parentType,proto3,enum=zitadel.analytics.v2beta.CountParentType" json:"parent_type,omitempty"`
	// The parent ID of the resource counts (e.g. organization or instance ID).
	// For example, reporting the amount of users per organization would use
	// `COUNT_PARENT_TYPE_ORGANIZATION` as parent type and the organization ID as parent ID.
	ParentId string `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// The resource counts to report, e.g. amount of `users`, `organizations`, etc.
	ResourceName string `protobuf:"bytes,6,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// The name of the table in the database, which was used to calculate the counts.
	// This can be used to deduplicate counts in case of multiple reports.
	// For example, if the counts were calculated from the `users14` table,
	// the table name would be `users14`, where there could also be a `users15` table
	// reported at the same time as the system is rolling out a new version.
	TableName string `protobuf:"bytes,7,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The timestamp when the count was last updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The actual amount of the resource.
	Amount uint32 `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ResourceCount) Reset() {
	*x = ResourceCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_analytics_v2beta_telemetry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCount) ProtoMessage() {}

func (x *ResourceCount) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_analytics_v2beta_telemetry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCount.ProtoReflect.Descriptor instead.
func (*ResourceCount) Descriptor() ([]byte, []int) {
	return file_zitadel_analytics_v2beta_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceCount) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ResourceCount) GetParentType() CountParentType {
	if x != nil {
		return x.ParentType
	}
	return CountParentType_COUNT_PARENT_TYPE_UNSPECIFIED
}

func (x *ResourceCount) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ResourceCount) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ResourceCount) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ResourceCount) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ResourceCount) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_zitadel_analytics_v2beta_telemetry_proto protoreflect.FileDescriptor

var file_zitadel_analytics_v2beta_telemetry_proto_rawDesc = []byte{
	0x0a, 0x28, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32,
	0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xb0, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x78, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x42, 0x40,
	0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_analytics_v2beta_telemetry_proto_rawDescOnce sync.Once
	file_zitadel_analytics_v2beta_telemetry_proto_rawDescData = file_zitadel_analytics_v2beta_telemetry_proto_rawDesc
)

func file_zitadel_analytics_v2beta_telemetry_proto_rawDescGZIP() []byte {
	file_zitadel_analytics_v2beta_telemetry_proto_rawDescOnce.Do(func() {
		file_zitadel_analytics_v2beta_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_analytics_v2beta_telemetry_proto_rawDescData)
	})
	return file_zitadel_analytics_v2beta_telemetry_proto_rawDescData
}

var file_zitadel_analytics_v2beta_telemetry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_zitadel_analytics_v2beta_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_zitadel_analytics_v2beta_telemetry_proto_goTypes = []interface{}{
	(CountParentType)(0),          // 0: zitadel.analytics.v2beta.CountParentType
	(*InstanceInformation)(nil),   // 1: zitadel.analytics.v2beta.InstanceInformation
	(*ResourceCount)(nil),         // 2: zitadel.analytics.v2beta.ResourceCount
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_zitadel_analytics_v2beta_telemetry_proto_depIdxs = []int32{
	3, // 0: zitadel.analytics.v2beta.InstanceInformation.created_at:type_name -> google.protobuf.Timestamp
	0, // 1: zitadel.analytics.v2beta.ResourceCount.parent_type:type_name -> zitadel.analytics.v2beta.CountParentType
	3, // 2: zitadel.analytics.v2beta.ResourceCount.updated_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_zitadel_analytics_v2beta_telemetry_proto_init() }
func file_zitadel_analytics_v2beta_telemetry_proto_init() {
	if File_zitadel_analytics_v2beta_telemetry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_analytics_v2beta_telemetry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_analytics_v2beta_telemetry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_analytics_v2beta_telemetry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_analytics_v2beta_telemetry_proto_goTypes,
		DependencyIndexes: file_zitadel_analytics_v2beta_telemetry_proto_depIdxs,
		EnumInfos:         file_zitadel_analytics_v2beta_telemetry_proto_enumTypes,
		MessageInfos:      file_zitadel_analytics_v2beta_telemetry_proto_msgTypes,
	}.Build()
	File_zitadel_analytics_v2beta_telemetry_proto = out.File
	file_zitadel_analytics_v2beta_telemetry_proto_rawDesc = nil
	file_zitadel_analytics_v2beta_telemetry_proto_goTypes = nil
	file_zitadel_analytics_v2beta_telemetry_proto_depIdxs = nil
}
