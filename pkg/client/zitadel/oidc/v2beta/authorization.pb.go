// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/oidc/v2beta/authorization.proto

package oidc

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Prompt int32

const (
	Prompt_PROMPT_UNSPECIFIED    Prompt = 0
	Prompt_PROMPT_NONE           Prompt = 1
	Prompt_PROMPT_LOGIN          Prompt = 2
	Prompt_PROMPT_CONSENT        Prompt = 3
	Prompt_PROMPT_SELECT_ACCOUNT Prompt = 4
	Prompt_PROMPT_CREATE         Prompt = 5
)

// Enum value maps for Prompt.
var (
	Prompt_name = map[int32]string{
		0: "PROMPT_UNSPECIFIED",
		1: "PROMPT_NONE",
		2: "PROMPT_LOGIN",
		3: "PROMPT_CONSENT",
		4: "PROMPT_SELECT_ACCOUNT",
		5: "PROMPT_CREATE",
	}
	Prompt_value = map[string]int32{
		"PROMPT_UNSPECIFIED":    0,
		"PROMPT_NONE":           1,
		"PROMPT_LOGIN":          2,
		"PROMPT_CONSENT":        3,
		"PROMPT_SELECT_ACCOUNT": 4,
		"PROMPT_CREATE":         5,
	}
)

func (x Prompt) Enum() *Prompt {
	p := new(Prompt)
	*p = x
	return p
}

func (x Prompt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Prompt) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_oidc_v2beta_authorization_proto_enumTypes[0].Descriptor()
}

func (Prompt) Type() protoreflect.EnumType {
	return &file_zitadel_oidc_v2beta_authorization_proto_enumTypes[0]
}

func (x Prompt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Prompt.Descriptor instead.
func (Prompt) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_oidc_v2beta_authorization_proto_rawDescGZIP(), []int{0}
}

type ErrorReason int32

const (
	ErrorReason_ERROR_REASON_UNSPECIFIED ErrorReason = 0
	// Error states from https://datatracker.ietf.org/doc/html/rfc6749#section-4.2.2.1
	ErrorReason_ERROR_REASON_INVALID_REQUEST           ErrorReason = 1
	ErrorReason_ERROR_REASON_UNAUTHORIZED_CLIENT       ErrorReason = 2
	ErrorReason_ERROR_REASON_ACCESS_DENIED             ErrorReason = 3
	ErrorReason_ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE ErrorReason = 4
	ErrorReason_ERROR_REASON_INVALID_SCOPE             ErrorReason = 5
	ErrorReason_ERROR_REASON_SERVER_ERROR              ErrorReason = 6
	ErrorReason_ERROR_REASON_TEMPORARY_UNAVAILABLE     ErrorReason = 7
	// Error states from https://openid.net/specs/openid-connect-core-1_0.html#AuthError
	ErrorReason_ERROR_REASON_INTERACTION_REQUIRED       ErrorReason = 8
	ErrorReason_ERROR_REASON_LOGIN_REQUIRED             ErrorReason = 9
	ErrorReason_ERROR_REASON_ACCOUNT_SELECTION_REQUIRED ErrorReason = 10
	ErrorReason_ERROR_REASON_CONSENT_REQUIRED           ErrorReason = 11
	ErrorReason_ERROR_REASON_INVALID_REQUEST_URI        ErrorReason = 12
	ErrorReason_ERROR_REASON_INVALID_REQUEST_OBJECT     ErrorReason = 13
	ErrorReason_ERROR_REASON_REQUEST_NOT_SUPPORTED      ErrorReason = 14
	ErrorReason_ERROR_REASON_REQUEST_URI_NOT_SUPPORTED  ErrorReason = 15
	ErrorReason_ERROR_REASON_REGISTRATION_NOT_SUPPORTED ErrorReason = 16
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:  "ERROR_REASON_UNSPECIFIED",
		1:  "ERROR_REASON_INVALID_REQUEST",
		2:  "ERROR_REASON_UNAUTHORIZED_CLIENT",
		3:  "ERROR_REASON_ACCESS_DENIED",
		4:  "ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE",
		5:  "ERROR_REASON_INVALID_SCOPE",
		6:  "ERROR_REASON_SERVER_ERROR",
		7:  "ERROR_REASON_TEMPORARY_UNAVAILABLE",
		8:  "ERROR_REASON_INTERACTION_REQUIRED",
		9:  "ERROR_REASON_LOGIN_REQUIRED",
		10: "ERROR_REASON_ACCOUNT_SELECTION_REQUIRED",
		11: "ERROR_REASON_CONSENT_REQUIRED",
		12: "ERROR_REASON_INVALID_REQUEST_URI",
		13: "ERROR_REASON_INVALID_REQUEST_OBJECT",
		14: "ERROR_REASON_REQUEST_NOT_SUPPORTED",
		15: "ERROR_REASON_REQUEST_URI_NOT_SUPPORTED",
		16: "ERROR_REASON_REGISTRATION_NOT_SUPPORTED",
	}
	ErrorReason_value = map[string]int32{
		"ERROR_REASON_UNSPECIFIED":                0,
		"ERROR_REASON_INVALID_REQUEST":            1,
		"ERROR_REASON_UNAUTHORIZED_CLIENT":        2,
		"ERROR_REASON_ACCESS_DENIED":              3,
		"ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE":  4,
		"ERROR_REASON_INVALID_SCOPE":              5,
		"ERROR_REASON_SERVER_ERROR":               6,
		"ERROR_REASON_TEMPORARY_UNAVAILABLE":      7,
		"ERROR_REASON_INTERACTION_REQUIRED":       8,
		"ERROR_REASON_LOGIN_REQUIRED":             9,
		"ERROR_REASON_ACCOUNT_SELECTION_REQUIRED": 10,
		"ERROR_REASON_CONSENT_REQUIRED":           11,
		"ERROR_REASON_INVALID_REQUEST_URI":        12,
		"ERROR_REASON_INVALID_REQUEST_OBJECT":     13,
		"ERROR_REASON_REQUEST_NOT_SUPPORTED":      14,
		"ERROR_REASON_REQUEST_URI_NOT_SUPPORTED":  15,
		"ERROR_REASON_REGISTRATION_NOT_SUPPORTED": 16,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_oidc_v2beta_authorization_proto_enumTypes[1].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_zitadel_oidc_v2beta_authorization_proto_enumTypes[1]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_oidc_v2beta_authorization_proto_rawDescGZIP(), []int{1}
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	ClientId     string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scope        []string               `protobuf:"bytes,4,rep,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri  string                 `protobuf:"bytes,5,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Prompt       []Prompt               `protobuf:"varint,6,rep,packed,name=prompt,proto3,enum=zitadel.oidc.v2beta.Prompt" json:"prompt,omitempty"`
	UiLocales    []string               `protobuf:"bytes,7,rep,name=ui_locales,json=uiLocales,proto3" json:"ui_locales,omitempty"`
	LoginHint    *string                `protobuf:"bytes,8,opt,name=login_hint,json=loginHint,proto3,oneof" json:"login_hint,omitempty"`
	MaxAge       *durationpb.Duration   `protobuf:"bytes,9,opt,name=max_age,json=maxAge,proto3,oneof" json:"max_age,omitempty"`
	HintUserId   *string                `protobuf:"bytes,10,opt,name=hint_user_id,json=hintUserId,proto3,oneof" json:"hint_user_id,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_oidc_v2beta_authorization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_oidc_v2beta_authorization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_oidc_v2beta_authorization_proto_rawDescGZIP(), []int{0}
}

func (x *AuthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthRequest) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *AuthRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthRequest) GetScope() []string {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *AuthRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthRequest) GetPrompt() []Prompt {
	if x != nil {
		return x.Prompt
	}
	return nil
}

func (x *AuthRequest) GetUiLocales() []string {
	if x != nil {
		return x.UiLocales
	}
	return nil
}

func (x *AuthRequest) GetLoginHint() string {
	if x != nil && x.LoginHint != nil {
		return *x.LoginHint
	}
	return ""
}

func (x *AuthRequest) GetMaxAge() *durationpb.Duration {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *AuthRequest) GetHintUserId() string {
	if x != nil && x.HintUserId != nil {
		return *x.HintUserId
	}
	return ""
}

type AuthorizationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error            ErrorReason `protobuf:"varint,1,opt,name=error,proto3,enum=zitadel.oidc.v2beta.ErrorReason" json:"error,omitempty"`
	ErrorDescription *string     `protobuf:"bytes,2,opt,name=error_description,json=errorDescription,proto3,oneof" json:"error_description,omitempty"`
	ErrorUri         *string     `protobuf:"bytes,3,opt,name=error_uri,json=errorUri,proto3,oneof" json:"error_uri,omitempty"`
}

func (x *AuthorizationError) Reset() {
	*x = AuthorizationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_oidc_v2beta_authorization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationError) ProtoMessage() {}

func (x *AuthorizationError) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_oidc_v2beta_authorization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationError.ProtoReflect.Descriptor instead.
func (*AuthorizationError) Descriptor() ([]byte, []int) {
	return file_zitadel_oidc_v2beta_authorization_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorizationError) GetError() ErrorReason {
	if x != nil {
		return x.Error
	}
	return ErrorReason_ERROR_REASON_UNSPECIFIED
}

func (x *AuthorizationError) GetErrorDescription() string {
	if x != nil && x.ErrorDescription != nil {
		return *x.ErrorDescription
	}
	return ""
}

func (x *AuthorizationError) GetErrorUri() string {
	if x != nil && x.ErrorUri != nil {
		return *x.ErrorUri
	}
	return ""
}

var File_zitadel_oidc_v2beta_authorization_proto protoreflect.FileDescriptor

var file_zitadel_oidc_v2beta_authorization_proto_rawDesc = []byte{
	0x0a, 0x27, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x76,
	0x32, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd6, 0x0d, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0x92, 0x41, 0x21,
	0x32, 0x1f, 0x49, 0x44, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6c, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x2b, 0x92, 0x41, 0x28, 0x32, 0x26, 0x54,
	0x69, 0x6d, 0x65, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x75, 0x74,
	0x68, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x77, 0x61, 0x73, 0x20, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x61, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0x92, 0x41, 0x41, 0x32, 0x3f, 0x4f, 0x49, 0x44,
	0x43, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x49, 0x44, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74,
	0x68, 0x61, 0x74, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x61, 0x75, 0x74, 0x68, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x49, 0x92, 0x41, 0x46, 0x32, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x20, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c,
	0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20,
	0x6d, 0x75, 0x73, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x2e,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0x92,
	0x41, 0x2e, 0x32, 0x2c, 0x42, 0x61, 0x73, 0x65, 0x20, 0x55, 0x52, 0x49, 0x20, 0x74, 0x68, 0x61,
	0x74, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x74, 0x6f,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x64, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x76, 0x32, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x42, 0x2f, 0x92, 0x41, 0x2c, 0x32,
	0x2a, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x6d, 0x75,
	0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x20,
	0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x12, 0xd4, 0x03, 0x0a, 0x0a, 0x75, 0x69, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0xb4, 0x03, 0x92, 0x41, 0xb0, 0x03, 0x32,
	0xad, 0x03, 0x45, 0x6e, 0x64, 0x2d, 0x55, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x20, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2c, 0x20, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x64,
	0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x42, 0x43,
	0x50, 0x34, 0x37, 0x20, 0x5b, 0x52, 0x46, 0x43, 0x35, 0x36, 0x34, 0x36, 0x5d, 0x20, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x20, 0x74, 0x61, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x2c, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x5b, 0x66, 0x72, 0x2d, 0x43, 0x41, 0x2c, 0x20, 0x66, 0x72, 0x2c, 0x20, 0x65, 0x6e,
	0x5d, 0x20, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61, 0x20, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x46, 0x72,
	0x65, 0x6e, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x69,
	0x6e, 0x20, 0x43, 0x61, 0x6e, 0x61, 0x64, 0x61, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x46,
	0x72, 0x65, 0x6e, 0x63, 0x68, 0x20, 0x28, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x61,
	0x20, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x29, 0x2c, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x20, 0x62,
	0x79, 0x20, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x20, 0x28, 0x77, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x20, 0x61, 0x20, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x2e, 0x20, 0x41, 0x6e, 0x20, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x20, 0x53, 0x48, 0x4f, 0x55, 0x4c, 0x44, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x20, 0x69, 0x66, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20, 0x6f, 0x72, 0x20,
	0x61, 0x6c, 0x6c, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x52,
	0x09, 0x75, 0x69, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x66, 0x92, 0x41, 0x63, 0x32, 0x61, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x68, 0x69, 0x6e, 0x74,
	0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x62, 0x79, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x61, 0x6e,
	0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x48, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0xa9, 0x02, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0xef, 0x01, 0x92, 0x41, 0xeb, 0x01, 0x32, 0xe8, 0x01, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x20, 0x74, 0x69,
	0x6d, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x74, 0x69, 0x6d,
	0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x6e, 0x64, 0x2d, 0x55, 0x73, 0x65, 0x72, 0x20, 0x77,
	0x61, 0x73, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x6c, 0x79, 0x20, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x69,
	0x73, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x30, 0x20, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x6d, 0x75, 0x73,
	0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x48, 0x01, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x6b, 0x0a, 0x0c, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0x92, 0x41, 0x41, 0x32, 0x3f,
	0x55, 0x73, 0x65, 0x72, 0x20, 0x49, 0x44, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x20, 0x66, 0x72,
	0x6f, 0x6d, 0x20, 0x61, 0x20, 0x49, 0x44, 0x20, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x48, 0x69,
	0x6e, 0x74, 0x20, 0x69, 0x66, 0x20, 0x69, 0x74, 0x20, 0x77, 0x61, 0x73, 0x20, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x48,
	0x02, 0x52, 0x0a, 0x68, 0x69, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x3a, 0x7a, 0x92, 0x41, 0x77, 0x2a, 0x75, 0x0a, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x6f, 0x75,
	0x74, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x4f, 0x49, 0x44,
	0x43, 0x20, 0x41, 0x75, 0x74, 0x68, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x41, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x3a, 0x2f, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x70,
	0x65, 0x63, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x31, 0x5f, 0x30, 0x2e, 0x68, 0x74, 0x6d, 0x6c,
	0x23, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x69, 0x6e, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x36, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x76, 0x32,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x2a,
	0x85, 0x01, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52,
	0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f,
	0x43, 0x4f, 0x4e, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f,
	0x4d, 0x50, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x05, 0x2a, 0x8e, 0x05, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52,
	0x49, 0x5a, 0x45, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1e, 0x0a,
	0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x03, 0x12, 0x2a, 0x0a,
	0x26, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41,
	0x52, 0x59, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x07,
	0x12, 0x25, 0x0a, 0x21, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x09, 0x12, 0x2b, 0x0a, 0x27, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x55, 0x52, 0x49, 0x10, 0x0c, 0x12, 0x27,
	0x0a, 0x23, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x0d, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0e, 0x12,
	0x2a, 0x0a, 0x26, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x55, 0x52, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x2b, 0x0a, 0x27, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50,
	0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x10, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x6f, 0x69, 0x64, 0x63, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x6f, 0x69, 0x64, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_oidc_v2beta_authorization_proto_rawDescOnce sync.Once
	file_zitadel_oidc_v2beta_authorization_proto_rawDescData = file_zitadel_oidc_v2beta_authorization_proto_rawDesc
)

func file_zitadel_oidc_v2beta_authorization_proto_rawDescGZIP() []byte {
	file_zitadel_oidc_v2beta_authorization_proto_rawDescOnce.Do(func() {
		file_zitadel_oidc_v2beta_authorization_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_oidc_v2beta_authorization_proto_rawDescData)
	})
	return file_zitadel_oidc_v2beta_authorization_proto_rawDescData
}

var file_zitadel_oidc_v2beta_authorization_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_zitadel_oidc_v2beta_authorization_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_zitadel_oidc_v2beta_authorization_proto_goTypes = []interface{}{
	(Prompt)(0),                   // 0: zitadel.oidc.v2beta.Prompt
	(ErrorReason)(0),              // 1: zitadel.oidc.v2beta.ErrorReason
	(*AuthRequest)(nil),           // 2: zitadel.oidc.v2beta.AuthRequest
	(*AuthorizationError)(nil),    // 3: zitadel.oidc.v2beta.AuthorizationError
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
}
var file_zitadel_oidc_v2beta_authorization_proto_depIdxs = []int32{
	4, // 0: zitadel.oidc.v2beta.AuthRequest.creation_date:type_name -> google.protobuf.Timestamp
	0, // 1: zitadel.oidc.v2beta.AuthRequest.prompt:type_name -> zitadel.oidc.v2beta.Prompt
	5, // 2: zitadel.oidc.v2beta.AuthRequest.max_age:type_name -> google.protobuf.Duration
	1, // 3: zitadel.oidc.v2beta.AuthorizationError.error:type_name -> zitadel.oidc.v2beta.ErrorReason
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_zitadel_oidc_v2beta_authorization_proto_init() }
func file_zitadel_oidc_v2beta_authorization_proto_init() {
	if File_zitadel_oidc_v2beta_authorization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_oidc_v2beta_authorization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_oidc_v2beta_authorization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_oidc_v2beta_authorization_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_zitadel_oidc_v2beta_authorization_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_oidc_v2beta_authorization_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_oidc_v2beta_authorization_proto_goTypes,
		DependencyIndexes: file_zitadel_oidc_v2beta_authorization_proto_depIdxs,
		EnumInfos:         file_zitadel_oidc_v2beta_authorization_proto_enumTypes,
		MessageInfos:      file_zitadel_oidc_v2beta_authorization_proto_msgTypes,
	}.Build()
	File_zitadel_oidc_v2beta_authorization_proto = out.File
	file_zitadel_oidc_v2beta_authorization_proto_rawDesc = nil
	file_zitadel_oidc_v2beta_authorization_proto_goTypes = nil
	file_zitadel_oidc_v2beta_authorization_proto_depIdxs = nil
}
