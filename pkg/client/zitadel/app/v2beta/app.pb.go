// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/app/v2beta/app.proto

package app

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v2 "github.com/zitadel/zitadel-go/v3/pkg/client/zitadel/filter/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppState int32

const (
	AppState_APP_STATE_UNSPECIFIED AppState = 0
	AppState_APP_STATE_ACTIVE      AppState = 1
	AppState_APP_STATE_INACTIVE    AppState = 2
	AppState_APP_STATE_REMOVED     AppState = 3
)

// Enum value maps for AppState.
var (
	AppState_name = map[int32]string{
		0: "APP_STATE_UNSPECIFIED",
		1: "APP_STATE_ACTIVE",
		2: "APP_STATE_INACTIVE",
		3: "APP_STATE_REMOVED",
	}
	AppState_value = map[string]int32{
		"APP_STATE_UNSPECIFIED": 0,
		"APP_STATE_ACTIVE":      1,
		"APP_STATE_INACTIVE":    2,
		"APP_STATE_REMOVED":     3,
	}
)

func (x AppState) Enum() *AppState {
	p := new(AppState)
	*p = x
	return p
}

func (x AppState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppState) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_app_v2beta_app_proto_enumTypes[0].Descriptor()
}

func (AppState) Type() protoreflect.EnumType {
	return &file_zitadel_app_v2beta_app_proto_enumTypes[0]
}

func (x AppState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppState.Descriptor instead.
func (AppState) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{0}
}

type AppSorting int32

const (
	AppSorting_APP_SORT_BY_ID            AppSorting = 0
	AppSorting_APP_SORT_BY_NAME          AppSorting = 1
	AppSorting_APP_SORT_BY_STATE         AppSorting = 2
	AppSorting_APP_SORT_BY_CREATION_DATE AppSorting = 3
	AppSorting_APP_SORT_BY_CHANGE_DATE   AppSorting = 4
)

// Enum value maps for AppSorting.
var (
	AppSorting_name = map[int32]string{
		0: "APP_SORT_BY_ID",
		1: "APP_SORT_BY_NAME",
		2: "APP_SORT_BY_STATE",
		3: "APP_SORT_BY_CREATION_DATE",
		4: "APP_SORT_BY_CHANGE_DATE",
	}
	AppSorting_value = map[string]int32{
		"APP_SORT_BY_ID":            0,
		"APP_SORT_BY_NAME":          1,
		"APP_SORT_BY_STATE":         2,
		"APP_SORT_BY_CREATION_DATE": 3,
		"APP_SORT_BY_CHANGE_DATE":   4,
	}
)

func (x AppSorting) Enum() *AppSorting {
	p := new(AppSorting)
	*p = x
	return p
}

func (x AppSorting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppSorting) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_app_v2beta_app_proto_enumTypes[1].Descriptor()
}

func (AppSorting) Type() protoreflect.EnumType {
	return &file_zitadel_app_v2beta_app_proto_enumTypes[1]
}

func (x AppSorting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppSorting.Descriptor instead.
func (AppSorting) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{1}
}

type ApplicationKeysSorting int32

const (
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_ID              ApplicationKeysSorting = 0
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_PROJECT_ID      ApplicationKeysSorting = 1
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_APPLICATION_ID  ApplicationKeysSorting = 2
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_CREATION_DATE   ApplicationKeysSorting = 3
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_ORGANIZATION_ID ApplicationKeysSorting = 4
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_EXPIRATION      ApplicationKeysSorting = 5
	ApplicationKeysSorting_APPLICATION_KEYS_SORT_BY_TYPE            ApplicationKeysSorting = 6
)

// Enum value maps for ApplicationKeysSorting.
var (
	ApplicationKeysSorting_name = map[int32]string{
		0: "APPLICATION_KEYS_SORT_BY_ID",
		1: "APPLICATION_KEYS_SORT_BY_PROJECT_ID",
		2: "APPLICATION_KEYS_SORT_BY_APPLICATION_ID",
		3: "APPLICATION_KEYS_SORT_BY_CREATION_DATE",
		4: "APPLICATION_KEYS_SORT_BY_ORGANIZATION_ID",
		5: "APPLICATION_KEYS_SORT_BY_EXPIRATION",
		6: "APPLICATION_KEYS_SORT_BY_TYPE",
	}
	ApplicationKeysSorting_value = map[string]int32{
		"APPLICATION_KEYS_SORT_BY_ID":              0,
		"APPLICATION_KEYS_SORT_BY_PROJECT_ID":      1,
		"APPLICATION_KEYS_SORT_BY_APPLICATION_ID":  2,
		"APPLICATION_KEYS_SORT_BY_CREATION_DATE":   3,
		"APPLICATION_KEYS_SORT_BY_ORGANIZATION_ID": 4,
		"APPLICATION_KEYS_SORT_BY_EXPIRATION":      5,
		"APPLICATION_KEYS_SORT_BY_TYPE":            6,
	}
)

func (x ApplicationKeysSorting) Enum() *ApplicationKeysSorting {
	p := new(ApplicationKeysSorting)
	*p = x
	return p
}

func (x ApplicationKeysSorting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationKeysSorting) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_app_v2beta_app_proto_enumTypes[2].Descriptor()
}

func (ApplicationKeysSorting) Type() protoreflect.EnumType {
	return &file_zitadel_app_v2beta_app_proto_enumTypes[2]
}

func (x ApplicationKeysSorting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationKeysSorting.Descriptor instead.
func (ApplicationKeysSorting) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{2}
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp of the app creation.
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	// The timestamp of the app update.
	ChangeDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=change_date,json=changeDate,proto3" json:"change_date,omitempty"`
	State      AppState               `protobuf:"varint,4,opt,name=state,proto3,enum=zitadel.app.v2beta.AppState" json:"state,omitempty"`
	Name       string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Config:
	//
	//	*Application_OidcConfig
	//	*Application_ApiConfig
	//	*Application_SamlConfig
	Config isApplication_Config `protobuf_oneof:"config"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_app_v2beta_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_app_v2beta_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Application) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Application) GetChangeDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeDate
	}
	return nil
}

func (x *Application) GetState() AppState {
	if x != nil {
		return x.State
	}
	return AppState_APP_STATE_UNSPECIFIED
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Application) GetConfig() isApplication_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *Application) GetOidcConfig() *OIDCConfig {
	if x, ok := x.GetConfig().(*Application_OidcConfig); ok {
		return x.OidcConfig
	}
	return nil
}

func (x *Application) GetApiConfig() *APIConfig {
	if x, ok := x.GetConfig().(*Application_ApiConfig); ok {
		return x.ApiConfig
	}
	return nil
}

func (x *Application) GetSamlConfig() *SAMLConfig {
	if x, ok := x.GetConfig().(*Application_SamlConfig); ok {
		return x.SamlConfig
	}
	return nil
}

type isApplication_Config interface {
	isApplication_Config()
}

type Application_OidcConfig struct {
	OidcConfig *OIDCConfig `protobuf:"bytes,6,opt,name=oidc_config,json=oidcConfig,proto3,oneof"`
}

type Application_ApiConfig struct {
	ApiConfig *APIConfig `protobuf:"bytes,7,opt,name=api_config,json=apiConfig,proto3,oneof"`
}

type Application_SamlConfig struct {
	SamlConfig *SAMLConfig `protobuf:"bytes,8,opt,name=saml_config,json=samlConfig,proto3,oneof"`
}

func (*Application_OidcConfig) isApplication_Config() {}

func (*Application_ApiConfig) isApplication_Config() {}

func (*Application_SamlConfig) isApplication_Config() {}

type ApplicationSearchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*ApplicationSearchFilter_NameFilter
	//	*ApplicationSearchFilter_StateFilter
	//	*ApplicationSearchFilter_ApiAppOnly
	//	*ApplicationSearchFilter_OidcAppOnly
	//	*ApplicationSearchFilter_SamlAppOnly
	Filter isApplicationSearchFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ApplicationSearchFilter) Reset() {
	*x = ApplicationSearchFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_app_v2beta_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSearchFilter) ProtoMessage() {}

func (x *ApplicationSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_app_v2beta_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSearchFilter.ProtoReflect.Descriptor instead.
func (*ApplicationSearchFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{1}
}

func (m *ApplicationSearchFilter) GetFilter() isApplicationSearchFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ApplicationSearchFilter) GetNameFilter() *ApplicationNameQuery {
	if x, ok := x.GetFilter().(*ApplicationSearchFilter_NameFilter); ok {
		return x.NameFilter
	}
	return nil
}

func (x *ApplicationSearchFilter) GetStateFilter() AppState {
	if x, ok := x.GetFilter().(*ApplicationSearchFilter_StateFilter); ok {
		return x.StateFilter
	}
	return AppState_APP_STATE_UNSPECIFIED
}

func (x *ApplicationSearchFilter) GetApiAppOnly() bool {
	if x, ok := x.GetFilter().(*ApplicationSearchFilter_ApiAppOnly); ok {
		return x.ApiAppOnly
	}
	return false
}

func (x *ApplicationSearchFilter) GetOidcAppOnly() bool {
	if x, ok := x.GetFilter().(*ApplicationSearchFilter_OidcAppOnly); ok {
		return x.OidcAppOnly
	}
	return false
}

func (x *ApplicationSearchFilter) GetSamlAppOnly() bool {
	if x, ok := x.GetFilter().(*ApplicationSearchFilter_SamlAppOnly); ok {
		return x.SamlAppOnly
	}
	return false
}

type isApplicationSearchFilter_Filter interface {
	isApplicationSearchFilter_Filter()
}

type ApplicationSearchFilter_NameFilter struct {
	NameFilter *ApplicationNameQuery `protobuf:"bytes,1,opt,name=name_filter,json=nameFilter,proto3,oneof"`
}

type ApplicationSearchFilter_StateFilter struct {
	StateFilter AppState `protobuf:"varint,2,opt,name=state_filter,json=stateFilter,proto3,enum=zitadel.app.v2beta.AppState,oneof"`
}

type ApplicationSearchFilter_ApiAppOnly struct {
	ApiAppOnly bool `protobuf:"varint,3,opt,name=api_app_only,json=apiAppOnly,proto3,oneof"`
}

type ApplicationSearchFilter_OidcAppOnly struct {
	OidcAppOnly bool `protobuf:"varint,4,opt,name=oidc_app_only,json=oidcAppOnly,proto3,oneof"`
}

type ApplicationSearchFilter_SamlAppOnly struct {
	SamlAppOnly bool `protobuf:"varint,5,opt,name=saml_app_only,json=samlAppOnly,proto3,oneof"`
}

func (*ApplicationSearchFilter_NameFilter) isApplicationSearchFilter_Filter() {}

func (*ApplicationSearchFilter_StateFilter) isApplicationSearchFilter_Filter() {}

func (*ApplicationSearchFilter_ApiAppOnly) isApplicationSearchFilter_Filter() {}

func (*ApplicationSearchFilter_OidcAppOnly) isApplicationSearchFilter_Filter() {}

func (*ApplicationSearchFilter_SamlAppOnly) isApplicationSearchFilter_Filter() {}

type ApplicationNameQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Method v2.TextFilterMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.filter.v2.TextFilterMethod" json:"method,omitempty"`
}

func (x *ApplicationNameQuery) Reset() {
	*x = ApplicationNameQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_app_v2beta_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationNameQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationNameQuery) ProtoMessage() {}

func (x *ApplicationNameQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_app_v2beta_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationNameQuery.ProtoReflect.Descriptor instead.
func (*ApplicationNameQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationNameQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationNameQuery) GetMethod() v2.TextFilterMethod {
	if x != nil {
		return x.Method
	}
	return v2.TextFilterMethod(0)
}

type ApplicationKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApplicationId  string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ProjectId      string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CreationDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	OrganizationId string                 `protobuf:"bytes,5,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *ApplicationKey) Reset() {
	*x = ApplicationKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_app_v2beta_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationKey) ProtoMessage() {}

func (x *ApplicationKey) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_app_v2beta_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationKey.ProtoReflect.Descriptor instead.
func (*ApplicationKey) Descriptor() ([]byte, []int) {
	return file_zitadel_app_v2beta_app_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApplicationKey) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ApplicationKey) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ApplicationKey) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *ApplicationKey) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ApplicationKey) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

var File_zitadel_app_v2beta_app_proto protoreflect.FileDescriptor

var file_zitadel_app_v2beta_app_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x32,
	0x62, 0x65, 0x74, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x1a, 0x1d, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76,
	0x32, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x32,
	0x62, 0x65, 0x74, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76,
	0x32, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x04, 0x0a, 0x0b, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39, 0x36, 0x32,
	0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x60, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32,
	0x34, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x38, 0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a, 0x34, 0x37,
	0x2e, 0x34, 0x39, 0x32, 0x5a, 0x22, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32,
	0x34, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x38, 0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a, 0x34, 0x37,
	0x2e, 0x34, 0x39, 0x32, 0x5a, 0x22, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x25, 0x92, 0x41, 0x22, 0x32, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b,
	0x4a, 0x09, 0x22, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x49, 0x44, 0x43,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x50,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x69, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53,
	0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x61, 0x6d,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xa8, 0x02, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4b, 0x0a,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x41, 0x70, 0x70, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x69, 0x64, 0x63,
	0x41, 0x70, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x6c, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x61, 0x6d, 0x6c, 0x41, 0x70, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x42, 0x0d, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xb6, 0x01, 0x0a,
	0x14, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x22, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x74, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x42, 0x37, 0x92, 0x41, 0x2c, 0x32, 0x2a, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x65, 0x78, 0x74, 0x20, 0x65, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x75, 0x73, 0x65, 0x64, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x60,
	0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x34, 0x2d, 0x31, 0x32,
	0x2d, 0x31, 0x38, 0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a, 0x34, 0x37, 0x2e, 0x34, 0x39, 0x32,
	0x5a, 0x22, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f,
	0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x34, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x38,
	0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a, 0x34, 0x37, 0x2e, 0x34, 0x39, 0x32, 0x5a, 0x22, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x2a,
	0x6a, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x89, 0x01, 0x0a, 0x0a,
	0x41, 0x70, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x50,
	0x50, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x4f, 0x52, 0x54,
	0x5f, 0x42, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x41,
	0x50, 0x50, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x50,
	0x50, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x2a, 0xb5, 0x02, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f,
	0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27,
	0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53,
	0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x2a, 0x0a, 0x26, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x5f, 0x53, 0x4f,
	0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42,
	0x59, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49,
	0x44, 0x10, 0x04, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d,
	0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53,
	0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x06, 0x42,
	0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74,
	0x61, 0x3b, 0x61, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_app_v2beta_app_proto_rawDescOnce sync.Once
	file_zitadel_app_v2beta_app_proto_rawDescData = file_zitadel_app_v2beta_app_proto_rawDesc
)

func file_zitadel_app_v2beta_app_proto_rawDescGZIP() []byte {
	file_zitadel_app_v2beta_app_proto_rawDescOnce.Do(func() {
		file_zitadel_app_v2beta_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_app_v2beta_app_proto_rawDescData)
	})
	return file_zitadel_app_v2beta_app_proto_rawDescData
}

var file_zitadel_app_v2beta_app_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_zitadel_app_v2beta_app_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_zitadel_app_v2beta_app_proto_goTypes = []interface{}{
	(AppState)(0),                   // 0: zitadel.app.v2beta.AppState
	(AppSorting)(0),                 // 1: zitadel.app.v2beta.AppSorting
	(ApplicationKeysSorting)(0),     // 2: zitadel.app.v2beta.ApplicationKeysSorting
	(*Application)(nil),             // 3: zitadel.app.v2beta.Application
	(*ApplicationSearchFilter)(nil), // 4: zitadel.app.v2beta.ApplicationSearchFilter
	(*ApplicationNameQuery)(nil),    // 5: zitadel.app.v2beta.ApplicationNameQuery
	(*ApplicationKey)(nil),          // 6: zitadel.app.v2beta.ApplicationKey
	(*timestamppb.Timestamp)(nil),   // 7: google.protobuf.Timestamp
	(*OIDCConfig)(nil),              // 8: zitadel.app.v2beta.OIDCConfig
	(*APIConfig)(nil),               // 9: zitadel.app.v2beta.APIConfig
	(*SAMLConfig)(nil),              // 10: zitadel.app.v2beta.SAMLConfig
	(v2.TextFilterMethod)(0),        // 11: zitadel.filter.v2.TextFilterMethod
}
var file_zitadel_app_v2beta_app_proto_depIdxs = []int32{
	7,  // 0: zitadel.app.v2beta.Application.creation_date:type_name -> google.protobuf.Timestamp
	7,  // 1: zitadel.app.v2beta.Application.change_date:type_name -> google.protobuf.Timestamp
	0,  // 2: zitadel.app.v2beta.Application.state:type_name -> zitadel.app.v2beta.AppState
	8,  // 3: zitadel.app.v2beta.Application.oidc_config:type_name -> zitadel.app.v2beta.OIDCConfig
	9,  // 4: zitadel.app.v2beta.Application.api_config:type_name -> zitadel.app.v2beta.APIConfig
	10, // 5: zitadel.app.v2beta.Application.saml_config:type_name -> zitadel.app.v2beta.SAMLConfig
	5,  // 6: zitadel.app.v2beta.ApplicationSearchFilter.name_filter:type_name -> zitadel.app.v2beta.ApplicationNameQuery
	0,  // 7: zitadel.app.v2beta.ApplicationSearchFilter.state_filter:type_name -> zitadel.app.v2beta.AppState
	11, // 8: zitadel.app.v2beta.ApplicationNameQuery.method:type_name -> zitadel.filter.v2.TextFilterMethod
	7,  // 9: zitadel.app.v2beta.ApplicationKey.creation_date:type_name -> google.protobuf.Timestamp
	7,  // 10: zitadel.app.v2beta.ApplicationKey.expiration_date:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_zitadel_app_v2beta_app_proto_init() }
func file_zitadel_app_v2beta_app_proto_init() {
	if File_zitadel_app_v2beta_app_proto != nil {
		return
	}
	file_zitadel_app_v2beta_oidc_proto_init()
	file_zitadel_app_v2beta_saml_proto_init()
	file_zitadel_app_v2beta_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zitadel_app_v2beta_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_app_v2beta_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSearchFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_app_v2beta_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationNameQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_app_v2beta_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_app_v2beta_app_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Application_OidcConfig)(nil),
		(*Application_ApiConfig)(nil),
		(*Application_SamlConfig)(nil),
	}
	file_zitadel_app_v2beta_app_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ApplicationSearchFilter_NameFilter)(nil),
		(*ApplicationSearchFilter_StateFilter)(nil),
		(*ApplicationSearchFilter_ApiAppOnly)(nil),
		(*ApplicationSearchFilter_OidcAppOnly)(nil),
		(*ApplicationSearchFilter_SamlAppOnly)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_app_v2beta_app_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_app_v2beta_app_proto_goTypes,
		DependencyIndexes: file_zitadel_app_v2beta_app_proto_depIdxs,
		EnumInfos:         file_zitadel_app_v2beta_app_proto_enumTypes,
		MessageInfos:      file_zitadel_app_v2beta_app_proto_msgTypes,
	}.Build()
	File_zitadel_app_v2beta_app_proto = out.File
	file_zitadel_app_v2beta_app_proto_rawDesc = nil
	file_zitadel_app_v2beta_app_proto_goTypes = nil
	file_zitadel_app_v2beta_app_proto_depIdxs = nil
}
