// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/filter/v2/filter.proto

package filter

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TextFilterMethod int32

const (
	TextFilterMethod_TEXT_FILTER_METHOD_EQUALS                  TextFilterMethod = 0
	TextFilterMethod_TEXT_FILTER_METHOD_EQUALS_IGNORE_CASE      TextFilterMethod = 1
	TextFilterMethod_TEXT_FILTER_METHOD_STARTS_WITH             TextFilterMethod = 2
	TextFilterMethod_TEXT_FILTER_METHOD_STARTS_WITH_IGNORE_CASE TextFilterMethod = 3
	TextFilterMethod_TEXT_FILTER_METHOD_CONTAINS                TextFilterMethod = 4
	TextFilterMethod_TEXT_FILTER_METHOD_CONTAINS_IGNORE_CASE    TextFilterMethod = 5
	TextFilterMethod_TEXT_FILTER_METHOD_ENDS_WITH               TextFilterMethod = 6
	TextFilterMethod_TEXT_FILTER_METHOD_ENDS_WITH_IGNORE_CASE   TextFilterMethod = 7
)

// Enum value maps for TextFilterMethod.
var (
	TextFilterMethod_name = map[int32]string{
		0: "TEXT_FILTER_METHOD_EQUALS",
		1: "TEXT_FILTER_METHOD_EQUALS_IGNORE_CASE",
		2: "TEXT_FILTER_METHOD_STARTS_WITH",
		3: "TEXT_FILTER_METHOD_STARTS_WITH_IGNORE_CASE",
		4: "TEXT_FILTER_METHOD_CONTAINS",
		5: "TEXT_FILTER_METHOD_CONTAINS_IGNORE_CASE",
		6: "TEXT_FILTER_METHOD_ENDS_WITH",
		7: "TEXT_FILTER_METHOD_ENDS_WITH_IGNORE_CASE",
	}
	TextFilterMethod_value = map[string]int32{
		"TEXT_FILTER_METHOD_EQUALS":                  0,
		"TEXT_FILTER_METHOD_EQUALS_IGNORE_CASE":      1,
		"TEXT_FILTER_METHOD_STARTS_WITH":             2,
		"TEXT_FILTER_METHOD_STARTS_WITH_IGNORE_CASE": 3,
		"TEXT_FILTER_METHOD_CONTAINS":                4,
		"TEXT_FILTER_METHOD_CONTAINS_IGNORE_CASE":    5,
		"TEXT_FILTER_METHOD_ENDS_WITH":               6,
		"TEXT_FILTER_METHOD_ENDS_WITH_IGNORE_CASE":   7,
	}
)

func (x TextFilterMethod) Enum() *TextFilterMethod {
	p := new(TextFilterMethod)
	*p = x
	return p
}

func (x TextFilterMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TextFilterMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_filter_v2_filter_proto_enumTypes[0].Descriptor()
}

func (TextFilterMethod) Type() protoreflect.EnumType {
	return &file_zitadel_filter_v2_filter_proto_enumTypes[0]
}

func (x TextFilterMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TextFilterMethod.Descriptor instead.
func (TextFilterMethod) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{0}
}

type ListFilterMethod int32

const (
	ListFilterMethod_LIST_FILTER_METHOD_IN ListFilterMethod = 0
)

// Enum value maps for ListFilterMethod.
var (
	ListFilterMethod_name = map[int32]string{
		0: "LIST_FILTER_METHOD_IN",
	}
	ListFilterMethod_value = map[string]int32{
		"LIST_FILTER_METHOD_IN": 0,
	}
)

func (x ListFilterMethod) Enum() *ListFilterMethod {
	p := new(ListFilterMethod)
	*p = x
	return p
}

func (x ListFilterMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFilterMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_filter_v2_filter_proto_enumTypes[1].Descriptor()
}

func (ListFilterMethod) Type() protoreflect.EnumType {
	return &file_zitadel_filter_v2_filter_proto_enumTypes[1]
}

func (x ListFilterMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFilterMethod.Descriptor instead.
func (ListFilterMethod) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{1}
}

type TimestampFilterMethod int32

const (
	TimestampFilterMethod_TIMESTAMP_FILTER_METHOD_EQUALS           TimestampFilterMethod = 0
	TimestampFilterMethod_TIMESTAMP_FILTER_METHOD_AFTER            TimestampFilterMethod = 1
	TimestampFilterMethod_TIMESTAMP_FILTER_METHOD_AFTER_OR_EQUALS  TimestampFilterMethod = 2
	TimestampFilterMethod_TIMESTAMP_FILTER_METHOD_BEFORE           TimestampFilterMethod = 3
	TimestampFilterMethod_TIMESTAMP_FILTER_METHOD_BEFORE_OR_EQUALS TimestampFilterMethod = 4
)

// Enum value maps for TimestampFilterMethod.
var (
	TimestampFilterMethod_name = map[int32]string{
		0: "TIMESTAMP_FILTER_METHOD_EQUALS",
		1: "TIMESTAMP_FILTER_METHOD_AFTER",
		2: "TIMESTAMP_FILTER_METHOD_AFTER_OR_EQUALS",
		3: "TIMESTAMP_FILTER_METHOD_BEFORE",
		4: "TIMESTAMP_FILTER_METHOD_BEFORE_OR_EQUALS",
	}
	TimestampFilterMethod_value = map[string]int32{
		"TIMESTAMP_FILTER_METHOD_EQUALS":           0,
		"TIMESTAMP_FILTER_METHOD_AFTER":            1,
		"TIMESTAMP_FILTER_METHOD_AFTER_OR_EQUALS":  2,
		"TIMESTAMP_FILTER_METHOD_BEFORE":           3,
		"TIMESTAMP_FILTER_METHOD_BEFORE_OR_EQUALS": 4,
	}
)

func (x TimestampFilterMethod) Enum() *TimestampFilterMethod {
	p := new(TimestampFilterMethod)
	*p = x
	return p
}

func (x TimestampFilterMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimestampFilterMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_filter_v2_filter_proto_enumTypes[2].Descriptor()
}

func (TimestampFilterMethod) Type() protoreflect.EnumType {
	return &file_zitadel_filter_v2_filter_proto_enumTypes[2]
}

func (x TimestampFilterMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimestampFilterMethod.Descriptor instead.
func (TimestampFilterMethod) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{2}
}

type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Starting point for retrieval, in combination of offset used to query a set list of objects.
	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// limit is the maximum amount of objects returned. The default is set to 100
	// with a maximum of 1000 in the runtime configuration.
	// If the limit exceeds the maximum configured ZITADEL will throw an error.
	// If no limit is present the default is taken.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Asc is the sorting order. If true the list is sorted ascending, if false
	// the list is sorted descending. The default is descending.
	Asc bool `protobuf:"varint,3,opt,name=asc,proto3" json:"asc,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_filter_v2_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_filter_v2_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PaginationRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationRequest) GetAsc() bool {
	if x != nil {
		return x.Asc
	}
	return false
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Absolute number of objects matching the query, regardless of applied limit.
	TotalResult uint64 `protobuf:"varint,1,opt,name=total_result,json=totalResult,proto3" json:"total_result,omitempty"`
	// Applied limit from query, defines maximum amount of objects per request, to compare if all objects are returned.
	AppliedLimit uint64 `protobuf:"varint,2,opt,name=applied_limit,json=appliedLimit,proto3" json:"applied_limit,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_filter_v2_filter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_filter_v2_filter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetTotalResult() uint64 {
	if x != nil {
		return x.TotalResult
	}
	return 0
}

func (x *PaginationResponse) GetAppliedLimit() uint64 {
	if x != nil {
		return x.AppliedLimit
	}
	return 0
}

type IDFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only return resources that belong to this id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDFilter) Reset() {
	*x = IDFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_filter_v2_filter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDFilter) ProtoMessage() {}

func (x *IDFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_filter_v2_filter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDFilter.ProtoReflect.Descriptor instead.
func (*IDFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{2}
}

func (x *IDFilter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TimestampFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter resources by timestamp.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Defines the condition (e.g., equals, before, after) that the timestamp of the retrieved resources should match.
	Method TimestampFilterMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.filter.v2.TimestampFilterMethod" json:"method,omitempty"`
}

func (x *TimestampFilter) Reset() {
	*x = TimestampFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_filter_v2_filter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimestampFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampFilter) ProtoMessage() {}

func (x *TimestampFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_filter_v2_filter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampFilter.ProtoReflect.Descriptor instead.
func (*TimestampFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_filter_v2_filter_proto_rawDescGZIP(), []int{3}
}

func (x *TimestampFilter) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TimestampFilter) GetMethod() TimestampFilterMethod {
	if x != nil {
		return x.Method
	}
	return TimestampFilterMethod_TIMESTAMP_FILTER_METHOD_EQUALS
}

var File_zitadel_filter_v2_filter_proto protoreflect.FileDescriptor

var file_zitadel_filter_v2_filter_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a,
	0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x06, 0x92, 0x41, 0x03, 0x4a, 0x01, 0x30, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0x92, 0x41, 0x04, 0x4a, 0x02, 0x31, 0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1c, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a,
	0x92, 0x41, 0x07, 0x4a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x03, 0x61, 0x73, 0x63, 0x22,
	0x70, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x08, 0x92, 0x41, 0x05,
	0x4a, 0x03, 0x31, 0x30, 0x30, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03,
	0x31, 0x30, 0x30, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x3f, 0x0a, 0x08, 0x49, 0x44, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x18, 0x4a, 0x13,
	0x22, 0x36, 0x39, 0x36, 0x32, 0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33,
	0x33, 0x37, 0x22, 0x78, 0xc8, 0x01, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32,
	0x34, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x38, 0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a, 0x34, 0x37,
	0x2e, 0x34, 0x39, 0x32, 0x5a, 0x22, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x4a, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2a, 0xce, 0x02,
	0x0a, 0x10, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45,
	0x52, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10,
	0x00, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x5f, 0x49,
	0x47, 0x4e, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x02,
	0x12, 0x2e, 0x0a, 0x2a, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x53, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x03,
	0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10,
	0x04, 0x12, 0x2b, 0x0a, 0x27, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53,
	0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x05, 0x12, 0x20,
	0x0a, 0x1c, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x45, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x06,
	0x12, 0x2c, 0x0a, 0x28, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x45, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x07, 0x2a, 0x2d,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45,
	0x52, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x00, 0x2a, 0xdd, 0x01,
	0x0a, 0x15, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x49, 0x4d, 0x45, 0x53,
	0x54, 0x41, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x54,
	0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x2b,
	0x0a, 0x27, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f,
	0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x54,
	0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x12,
	0x2c, 0x0a, 0x28, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x4c,
	0x54, 0x45, 0x52, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52,
	0x45, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x42, 0x36, 0x5a,
	0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x3b, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_filter_v2_filter_proto_rawDescOnce sync.Once
	file_zitadel_filter_v2_filter_proto_rawDescData = file_zitadel_filter_v2_filter_proto_rawDesc
)

func file_zitadel_filter_v2_filter_proto_rawDescGZIP() []byte {
	file_zitadel_filter_v2_filter_proto_rawDescOnce.Do(func() {
		file_zitadel_filter_v2_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_filter_v2_filter_proto_rawDescData)
	})
	return file_zitadel_filter_v2_filter_proto_rawDescData
}

var file_zitadel_filter_v2_filter_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_zitadel_filter_v2_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_zitadel_filter_v2_filter_proto_goTypes = []interface{}{
	(TextFilterMethod)(0),         // 0: zitadel.filter.v2.TextFilterMethod
	(ListFilterMethod)(0),         // 1: zitadel.filter.v2.ListFilterMethod
	(TimestampFilterMethod)(0),    // 2: zitadel.filter.v2.TimestampFilterMethod
	(*PaginationRequest)(nil),     // 3: zitadel.filter.v2.PaginationRequest
	(*PaginationResponse)(nil),    // 4: zitadel.filter.v2.PaginationResponse
	(*IDFilter)(nil),              // 5: zitadel.filter.v2.IDFilter
	(*TimestampFilter)(nil),       // 6: zitadel.filter.v2.TimestampFilter
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_zitadel_filter_v2_filter_proto_depIdxs = []int32{
	7, // 0: zitadel.filter.v2.TimestampFilter.timestamp:type_name -> google.protobuf.Timestamp
	2, // 1: zitadel.filter.v2.TimestampFilter.method:type_name -> zitadel.filter.v2.TimestampFilterMethod
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_zitadel_filter_v2_filter_proto_init() }
func file_zitadel_filter_v2_filter_proto_init() {
	if File_zitadel_filter_v2_filter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_filter_v2_filter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_filter_v2_filter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_filter_v2_filter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_filter_v2_filter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimestampFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_filter_v2_filter_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_filter_v2_filter_proto_goTypes,
		DependencyIndexes: file_zitadel_filter_v2_filter_proto_depIdxs,
		EnumInfos:         file_zitadel_filter_v2_filter_proto_enumTypes,
		MessageInfos:      file_zitadel_filter_v2_filter_proto_msgTypes,
	}.Build()
	File_zitadel_filter_v2_filter_proto = out.File
	file_zitadel_filter_v2_filter_proto_rawDesc = nil
	file_zitadel_filter_v2_filter_proto_goTypes = nil
	file_zitadel_filter_v2_filter_proto_depIdxs = nil
}
