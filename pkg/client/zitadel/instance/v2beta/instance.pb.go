// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/instance/v2beta/instance.proto

package instance

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v2 "github.com/zitadel/zitadel-go/v3/pkg/client/zitadel/object/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_STATE_UNSPECIFIED State = 0
	State_STATE_CREATING    State = 1
	State_STATE_RUNNING     State = 2
	State_STATE_STOPPING    State = 3
	State_STATE_STOPPED     State = 4
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_CREATING",
		2: "STATE_RUNNING",
		3: "STATE_STOPPING",
		4: "STATE_STOPPED",
	}
	State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"STATE_CREATING":    1,
		"STATE_RUNNING":     2,
		"STATE_STOPPING":    3,
		"STATE_STOPPED":     4,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_instance_v2beta_instance_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_zitadel_instance_v2beta_instance_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{0}
}

type FieldName int32

const (
	FieldName_FIELD_NAME_UNSPECIFIED   FieldName = 0
	FieldName_FIELD_NAME_ID            FieldName = 1
	FieldName_FIELD_NAME_NAME          FieldName = 2
	FieldName_FIELD_NAME_CREATION_DATE FieldName = 3
)

// Enum value maps for FieldName.
var (
	FieldName_name = map[int32]string{
		0: "FIELD_NAME_UNSPECIFIED",
		1: "FIELD_NAME_ID",
		2: "FIELD_NAME_NAME",
		3: "FIELD_NAME_CREATION_DATE",
	}
	FieldName_value = map[string]int32{
		"FIELD_NAME_UNSPECIFIED":   0,
		"FIELD_NAME_ID":            1,
		"FIELD_NAME_NAME":          2,
		"FIELD_NAME_CREATION_DATE": 3,
	}
)

func (x FieldName) Enum() *FieldName {
	p := new(FieldName)
	*p = x
	return p
}

func (x FieldName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldName) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_instance_v2beta_instance_proto_enumTypes[1].Descriptor()
}

func (FieldName) Type() protoreflect.EnumType {
	return &file_zitadel_instance_v2beta_instance_proto_enumTypes[1]
}

func (x FieldName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldName.Descriptor instead.
func (FieldName) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{1}
}

type DomainFieldName int32

const (
	DomainFieldName_DOMAIN_FIELD_NAME_UNSPECIFIED   DomainFieldName = 0
	DomainFieldName_DOMAIN_FIELD_NAME_DOMAIN        DomainFieldName = 1
	DomainFieldName_DOMAIN_FIELD_NAME_PRIMARY       DomainFieldName = 2
	DomainFieldName_DOMAIN_FIELD_NAME_GENERATED     DomainFieldName = 3
	DomainFieldName_DOMAIN_FIELD_NAME_CREATION_DATE DomainFieldName = 4
)

// Enum value maps for DomainFieldName.
var (
	DomainFieldName_name = map[int32]string{
		0: "DOMAIN_FIELD_NAME_UNSPECIFIED",
		1: "DOMAIN_FIELD_NAME_DOMAIN",
		2: "DOMAIN_FIELD_NAME_PRIMARY",
		3: "DOMAIN_FIELD_NAME_GENERATED",
		4: "DOMAIN_FIELD_NAME_CREATION_DATE",
	}
	DomainFieldName_value = map[string]int32{
		"DOMAIN_FIELD_NAME_UNSPECIFIED":   0,
		"DOMAIN_FIELD_NAME_DOMAIN":        1,
		"DOMAIN_FIELD_NAME_PRIMARY":       2,
		"DOMAIN_FIELD_NAME_GENERATED":     3,
		"DOMAIN_FIELD_NAME_CREATION_DATE": 4,
	}
)

func (x DomainFieldName) Enum() *DomainFieldName {
	p := new(DomainFieldName)
	*p = x
	return p
}

func (x DomainFieldName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainFieldName) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_instance_v2beta_instance_proto_enumTypes[2].Descriptor()
}

func (DomainFieldName) Type() protoreflect.EnumType {
	return &file_zitadel_instance_v2beta_instance_proto_enumTypes[2]
}

func (x DomainFieldName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainFieldName.Descriptor instead.
func (DomainFieldName) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{2}
}

type TrustedDomainFieldName int32

const (
	TrustedDomainFieldName_TRUSTED_DOMAIN_FIELD_NAME_UNSPECIFIED   TrustedDomainFieldName = 0
	TrustedDomainFieldName_TRUSTED_DOMAIN_FIELD_NAME_DOMAIN        TrustedDomainFieldName = 1
	TrustedDomainFieldName_TRUSTED_DOMAIN_FIELD_NAME_CREATION_DATE TrustedDomainFieldName = 2
)

// Enum value maps for TrustedDomainFieldName.
var (
	TrustedDomainFieldName_name = map[int32]string{
		0: "TRUSTED_DOMAIN_FIELD_NAME_UNSPECIFIED",
		1: "TRUSTED_DOMAIN_FIELD_NAME_DOMAIN",
		2: "TRUSTED_DOMAIN_FIELD_NAME_CREATION_DATE",
	}
	TrustedDomainFieldName_value = map[string]int32{
		"TRUSTED_DOMAIN_FIELD_NAME_UNSPECIFIED":   0,
		"TRUSTED_DOMAIN_FIELD_NAME_DOMAIN":        1,
		"TRUSTED_DOMAIN_FIELD_NAME_CREATION_DATE": 2,
	}
)

func (x TrustedDomainFieldName) Enum() *TrustedDomainFieldName {
	p := new(TrustedDomainFieldName)
	*p = x
	return p
}

func (x TrustedDomainFieldName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrustedDomainFieldName) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_instance_v2beta_instance_proto_enumTypes[3].Descriptor()
}

func (TrustedDomainFieldName) Type() protoreflect.EnumType {
	return &file_zitadel_instance_v2beta_instance_proto_enumTypes[3]
}

func (x TrustedDomainFieldName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrustedDomainFieldName.Descriptor instead.
func (TrustedDomainFieldName) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{3}
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// change_date is the timestamp when the object was changed
	//
	// on read: the timestamp of the last event reduced by the projection
	//
	// on manipulation: the timestamp of the event(s) added by the manipulation
	ChangeDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_date,json=changeDate,proto3" json:"change_date,omitempty"`
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	State        State                  `protobuf:"varint,4,opt,name=state,proto3,enum=zitadel.instance.v2beta.State" json:"state,omitempty"`
	Name         string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Version      string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	Domains      []*Domain              `protobuf:"bytes,7,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{0}
}

func (x *Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instance) GetChangeDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeDate
	}
	return nil
}

func (x *Instance) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Instance) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Instance) GetDomains() []*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string                 `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	Domain       string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Primary      bool                   `protobuf:"varint,4,opt,name=primary,proto3" json:"primary,omitempty"`
	Generated    bool                   `protobuf:"varint,5,opt,name=generated,proto3" json:"generated,omitempty"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{1}
}

func (x *Domain) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Domain) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Domain) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Domain) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *Domain) GetGenerated() bool {
	if x != nil {
		return x.Generated
	}
	return false
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//
	//	*Query_IdQuery
	//	*Query_DomainQuery
	Query isQuery_Query `protobuf_oneof:"query"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{2}
}

func (m *Query) GetQuery() isQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *Query) GetIdQuery() *IdsQuery {
	if x, ok := x.GetQuery().(*Query_IdQuery); ok {
		return x.IdQuery
	}
	return nil
}

func (x *Query) GetDomainQuery() *DomainsQuery {
	if x, ok := x.GetQuery().(*Query_DomainQuery); ok {
		return x.DomainQuery
	}
	return nil
}

type isQuery_Query interface {
	isQuery_Query()
}

type Query_IdQuery struct {
	IdQuery *IdsQuery `protobuf:"bytes,1,opt,name=id_query,json=idQuery,proto3,oneof"`
}

type Query_DomainQuery struct {
	DomainQuery *DomainsQuery `protobuf:"bytes,2,opt,name=domain_query,json=domainQuery,proto3,oneof"`
}

func (*Query_IdQuery) isQuery_Query() {}

func (*Query_DomainQuery) isQuery_Query() {}

type IdsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsQuery) Reset() {
	*x = IdsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsQuery) ProtoMessage() {}

func (x *IdsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsQuery.ProtoReflect.Descriptor instead.
func (*IdsQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{3}
}

func (x *IdsQuery) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DomainsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []string `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *DomainsQuery) Reset() {
	*x = DomainsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainsQuery) ProtoMessage() {}

func (x *DomainsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainsQuery.ProtoReflect.Descriptor instead.
func (*DomainsQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{4}
}

func (x *DomainsQuery) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DomainSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//
	//	*DomainSearchQuery_DomainQuery
	//	*DomainSearchQuery_GeneratedQuery
	//	*DomainSearchQuery_PrimaryQuery
	Query isDomainSearchQuery_Query `protobuf_oneof:"query"`
}

func (x *DomainSearchQuery) Reset() {
	*x = DomainSearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainSearchQuery) ProtoMessage() {}

func (x *DomainSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainSearchQuery.ProtoReflect.Descriptor instead.
func (*DomainSearchQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{5}
}

func (m *DomainSearchQuery) GetQuery() isDomainSearchQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *DomainSearchQuery) GetDomainQuery() *DomainQuery {
	if x, ok := x.GetQuery().(*DomainSearchQuery_DomainQuery); ok {
		return x.DomainQuery
	}
	return nil
}

func (x *DomainSearchQuery) GetGeneratedQuery() *DomainGeneratedQuery {
	if x, ok := x.GetQuery().(*DomainSearchQuery_GeneratedQuery); ok {
		return x.GeneratedQuery
	}
	return nil
}

func (x *DomainSearchQuery) GetPrimaryQuery() *DomainPrimaryQuery {
	if x, ok := x.GetQuery().(*DomainSearchQuery_PrimaryQuery); ok {
		return x.PrimaryQuery
	}
	return nil
}

type isDomainSearchQuery_Query interface {
	isDomainSearchQuery_Query()
}

type DomainSearchQuery_DomainQuery struct {
	DomainQuery *DomainQuery `protobuf:"bytes,1,opt,name=domain_query,json=domainQuery,proto3,oneof"`
}

type DomainSearchQuery_GeneratedQuery struct {
	GeneratedQuery *DomainGeneratedQuery `protobuf:"bytes,2,opt,name=generated_query,json=generatedQuery,proto3,oneof"`
}

type DomainSearchQuery_PrimaryQuery struct {
	PrimaryQuery *DomainPrimaryQuery `protobuf:"bytes,3,opt,name=primary_query,json=primaryQuery,proto3,oneof"`
}

func (*DomainSearchQuery_DomainQuery) isDomainSearchQuery_Query() {}

func (*DomainSearchQuery_GeneratedQuery) isDomainSearchQuery_Query() {}

func (*DomainSearchQuery_PrimaryQuery) isDomainSearchQuery_Query() {}

type DomainQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string             `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Method v2.TextQueryMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.object.v2.TextQueryMethod" json:"method,omitempty"`
}

func (x *DomainQuery) Reset() {
	*x = DomainQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainQuery) ProtoMessage() {}

func (x *DomainQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainQuery.ProtoReflect.Descriptor instead.
func (*DomainQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{6}
}

func (x *DomainQuery) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainQuery) GetMethod() v2.TextQueryMethod {
	if x != nil {
		return x.Method
	}
	return v2.TextQueryMethod(0)
}

type DomainGeneratedQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generated bool `protobuf:"varint,1,opt,name=generated,proto3" json:"generated,omitempty"`
}

func (x *DomainGeneratedQuery) Reset() {
	*x = DomainGeneratedQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainGeneratedQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainGeneratedQuery) ProtoMessage() {}

func (x *DomainGeneratedQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainGeneratedQuery.ProtoReflect.Descriptor instead.
func (*DomainGeneratedQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{7}
}

func (x *DomainGeneratedQuery) GetGenerated() bool {
	if x != nil {
		return x.Generated
	}
	return false
}

type DomainPrimaryQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary bool `protobuf:"varint,1,opt,name=primary,proto3" json:"primary,omitempty"`
}

func (x *DomainPrimaryQuery) Reset() {
	*x = DomainPrimaryQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainPrimaryQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainPrimaryQuery) ProtoMessage() {}

func (x *DomainPrimaryQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainPrimaryQuery.ProtoReflect.Descriptor instead.
func (*DomainPrimaryQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{8}
}

func (x *DomainPrimaryQuery) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

type TrustedDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string                 `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	Domain       string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *TrustedDomain) Reset() {
	*x = TrustedDomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedDomain) ProtoMessage() {}

func (x *TrustedDomain) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedDomain.ProtoReflect.Descriptor instead.
func (*TrustedDomain) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{9}
}

func (x *TrustedDomain) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *TrustedDomain) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *TrustedDomain) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type TrustedDomainSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//
	//	*TrustedDomainSearchQuery_DomainQuery
	Query isTrustedDomainSearchQuery_Query `protobuf_oneof:"query"`
}

func (x *TrustedDomainSearchQuery) Reset() {
	*x = TrustedDomainSearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedDomainSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedDomainSearchQuery) ProtoMessage() {}

func (x *TrustedDomainSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_instance_v2beta_instance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedDomainSearchQuery.ProtoReflect.Descriptor instead.
func (*TrustedDomainSearchQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_instance_v2beta_instance_proto_rawDescGZIP(), []int{10}
}

func (m *TrustedDomainSearchQuery) GetQuery() isTrustedDomainSearchQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *TrustedDomainSearchQuery) GetDomainQuery() *DomainQuery {
	if x, ok := x.GetQuery().(*TrustedDomainSearchQuery_DomainQuery); ok {
		return x.DomainQuery
	}
	return nil
}

type isTrustedDomainSearchQuery_Query interface {
	isTrustedDomainSearchQuery_Query()
}

type TrustedDomainSearchQuery_DomainQuery struct {
	DomainQuery *DomainQuery `protobuf:"bytes,1,opt,name=domain_query,json=domainQuery,proto3,oneof"`
}

func (*TrustedDomainSearchQuery_DomainQuery) isTrustedDomainSearchQuery_Query() {}

var File_zitadel_instance_v2beta_instance_proto protoreflect.FileDescriptor

var file_zitadel_instance_v2beta_instance_proto_rawDesc = []byte{
	0x0a, 0x26, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74,
	0x61, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x03, 0x0a, 0x08,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39, 0x36, 0x32,
	0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x5c, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x35, 0x2d,
	0x30, 0x31, 0x2d, 0x32, 0x33, 0x54, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x3a, 0x31, 0x38, 0x2e, 0x30,
	0x35, 0x31, 0x5a, 0x22, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x60, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x35, 0x2d,
	0x30, 0x31, 0x2d, 0x32, 0x33, 0x54, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x3a, 0x31, 0x38, 0x2e, 0x30,
	0x35, 0x31, 0x5a, 0x22, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x58, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x22, 0x92, 0x41, 0x1f, 0x32, 0x1d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a,
	0x09, 0x22, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x60, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x35, 0x2d, 0x30,
	0x31, 0x2d, 0x32, 0x33, 0x54, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x3a, 0x31, 0x38, 0x2e, 0x30, 0x35,
	0x31, 0x5a, 0x22, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x4a, 0x0d, 0x22, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x3e, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x64, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x69, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x4a, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0c, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x57, 0x0a, 0x08, 0x49, 0x64, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x39, 0x92, 0x41, 0x36, 0x32, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x20, 0x49, 0x44, 0x4a, 0x27, 0x5b, 0x22, 0x34, 0x38, 0x32, 0x30, 0x38, 0x34, 0x30, 0x39,
	0x33, 0x38, 0x34, 0x30, 0x32, 0x34, 0x32, 0x39, 0x22, 0x2c, 0x22, 0x34, 0x38, 0x32, 0x30, 0x38,
	0x34, 0x30, 0x39, 0x33, 0x38, 0x34, 0x30, 0x32, 0x34, 0x32, 0x32, 0x22, 0x5d, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x97, 0x01, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x7d, 0x92, 0x41, 0x6a, 0x32, 0x34, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x20, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x4a, 0x2f, 0x5b, 0x22, 0x6d, 0x79, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x65, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0x2c, 0x20, 0x22,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x22,
	0x5d, 0xa0, 0x01, 0x14, 0xfa, 0x42, 0x0d, 0x92, 0x01, 0x0a, 0x10, 0x14, 0x22, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x64, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x9a, 0x02,
	0x0a, 0x11, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x58,
	0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x52, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0c, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x12, 0x4a,
	0x0d, 0x22, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x78, 0xc8,
	0x01, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x73, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x37, 0x92, 0x41, 0x2c, 0x32, 0x2a, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x65, 0x78, 0x74, 0x20, 0x65,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34,
	0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x20, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x14, 0x92, 0x41, 0x11,
	0x32, 0x0f, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x20, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x60, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x35, 0x2d, 0x30, 0x31, 0x2d,
	0x32, 0x33, 0x54, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x3a, 0x31, 0x38, 0x2e, 0x30, 0x35, 0x31, 0x5a,
	0x22, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0x92, 0x41, 0x0f, 0x4a, 0x0d, 0x22, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x22, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x73, 0x0a, 0x18, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x0c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x03, 0xf8, 0x42, 0x01,
	0x2a, 0x6c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x6d,
	0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12,
	0x1c, 0x0a, 0x18, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x2a, 0xb7, 0x01,
	0x0a, 0x0f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x10,
	0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x2a, 0x96, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x52, 0x55, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x4f,
	0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a,
	0x20, 0x54, 0x52, 0x55, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49,
	0x4e, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x54, 0x52, 0x55, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x44,
	0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_instance_v2beta_instance_proto_rawDescOnce sync.Once
	file_zitadel_instance_v2beta_instance_proto_rawDescData = file_zitadel_instance_v2beta_instance_proto_rawDesc
)

func file_zitadel_instance_v2beta_instance_proto_rawDescGZIP() []byte {
	file_zitadel_instance_v2beta_instance_proto_rawDescOnce.Do(func() {
		file_zitadel_instance_v2beta_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_instance_v2beta_instance_proto_rawDescData)
	})
	return file_zitadel_instance_v2beta_instance_proto_rawDescData
}

var file_zitadel_instance_v2beta_instance_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_zitadel_instance_v2beta_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_zitadel_instance_v2beta_instance_proto_goTypes = []interface{}{
	(State)(0),                       // 0: zitadel.instance.v2beta.State
	(FieldName)(0),                   // 1: zitadel.instance.v2beta.FieldName
	(DomainFieldName)(0),             // 2: zitadel.instance.v2beta.DomainFieldName
	(TrustedDomainFieldName)(0),      // 3: zitadel.instance.v2beta.TrustedDomainFieldName
	(*Instance)(nil),                 // 4: zitadel.instance.v2beta.Instance
	(*Domain)(nil),                   // 5: zitadel.instance.v2beta.Domain
	(*Query)(nil),                    // 6: zitadel.instance.v2beta.Query
	(*IdsQuery)(nil),                 // 7: zitadel.instance.v2beta.IdsQuery
	(*DomainsQuery)(nil),             // 8: zitadel.instance.v2beta.DomainsQuery
	(*DomainSearchQuery)(nil),        // 9: zitadel.instance.v2beta.DomainSearchQuery
	(*DomainQuery)(nil),              // 10: zitadel.instance.v2beta.DomainQuery
	(*DomainGeneratedQuery)(nil),     // 11: zitadel.instance.v2beta.DomainGeneratedQuery
	(*DomainPrimaryQuery)(nil),       // 12: zitadel.instance.v2beta.DomainPrimaryQuery
	(*TrustedDomain)(nil),            // 13: zitadel.instance.v2beta.TrustedDomain
	(*TrustedDomainSearchQuery)(nil), // 14: zitadel.instance.v2beta.TrustedDomainSearchQuery
	(*timestamppb.Timestamp)(nil),    // 15: google.protobuf.Timestamp
	(v2.TextQueryMethod)(0),          // 16: zitadel.object.v2.TextQueryMethod
}
var file_zitadel_instance_v2beta_instance_proto_depIdxs = []int32{
	15, // 0: zitadel.instance.v2beta.Instance.change_date:type_name -> google.protobuf.Timestamp
	15, // 1: zitadel.instance.v2beta.Instance.creation_date:type_name -> google.protobuf.Timestamp
	0,  // 2: zitadel.instance.v2beta.Instance.state:type_name -> zitadel.instance.v2beta.State
	5,  // 3: zitadel.instance.v2beta.Instance.domains:type_name -> zitadel.instance.v2beta.Domain
	15, // 4: zitadel.instance.v2beta.Domain.creation_date:type_name -> google.protobuf.Timestamp
	7,  // 5: zitadel.instance.v2beta.Query.id_query:type_name -> zitadel.instance.v2beta.IdsQuery
	8,  // 6: zitadel.instance.v2beta.Query.domain_query:type_name -> zitadel.instance.v2beta.DomainsQuery
	10, // 7: zitadel.instance.v2beta.DomainSearchQuery.domain_query:type_name -> zitadel.instance.v2beta.DomainQuery
	11, // 8: zitadel.instance.v2beta.DomainSearchQuery.generated_query:type_name -> zitadel.instance.v2beta.DomainGeneratedQuery
	12, // 9: zitadel.instance.v2beta.DomainSearchQuery.primary_query:type_name -> zitadel.instance.v2beta.DomainPrimaryQuery
	16, // 10: zitadel.instance.v2beta.DomainQuery.method:type_name -> zitadel.object.v2.TextQueryMethod
	15, // 11: zitadel.instance.v2beta.TrustedDomain.creation_date:type_name -> google.protobuf.Timestamp
	10, // 12: zitadel.instance.v2beta.TrustedDomainSearchQuery.domain_query:type_name -> zitadel.instance.v2beta.DomainQuery
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_zitadel_instance_v2beta_instance_proto_init() }
func file_zitadel_instance_v2beta_instance_proto_init() {
	if File_zitadel_instance_v2beta_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_instance_v2beta_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainSearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainGeneratedQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainPrimaryQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedDomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_instance_v2beta_instance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedDomainSearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_instance_v2beta_instance_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Query_IdQuery)(nil),
		(*Query_DomainQuery)(nil),
	}
	file_zitadel_instance_v2beta_instance_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*DomainSearchQuery_DomainQuery)(nil),
		(*DomainSearchQuery_GeneratedQuery)(nil),
		(*DomainSearchQuery_PrimaryQuery)(nil),
	}
	file_zitadel_instance_v2beta_instance_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*TrustedDomainSearchQuery_DomainQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_instance_v2beta_instance_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_instance_v2beta_instance_proto_goTypes,
		DependencyIndexes: file_zitadel_instance_v2beta_instance_proto_depIdxs,
		EnumInfos:         file_zitadel_instance_v2beta_instance_proto_enumTypes,
		MessageInfos:      file_zitadel_instance_v2beta_instance_proto_msgTypes,
	}.Build()
	File_zitadel_instance_v2beta_instance_proto = out.File
	file_zitadel_instance_v2beta_instance_proto_rawDesc = nil
	file_zitadel_instance_v2beta_instance_proto_goTypes = nil
	file_zitadel_instance_v2beta_instance_proto_depIdxs = nil
}
