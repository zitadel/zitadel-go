// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/action/v2/query.proto

package action

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v2 "github.com/zitadel/zitadel-go/v3/pkg/client/zitadel/filter/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TargetFieldName int32

const (
	TargetFieldName_TARGET_FIELD_NAME_UNSPECIFIED        TargetFieldName = 0
	TargetFieldName_TARGET_FIELD_NAME_ID                 TargetFieldName = 1
	TargetFieldName_TARGET_FIELD_NAME_CREATED_DATE       TargetFieldName = 2
	TargetFieldName_TARGET_FIELD_NAME_CHANGED_DATE       TargetFieldName = 3
	TargetFieldName_TARGET_FIELD_NAME_NAME               TargetFieldName = 4
	TargetFieldName_TARGET_FIELD_NAME_TARGET_TYPE        TargetFieldName = 5
	TargetFieldName_TARGET_FIELD_NAME_URL                TargetFieldName = 6
	TargetFieldName_TARGET_FIELD_NAME_TIMEOUT            TargetFieldName = 7
	TargetFieldName_TARGET_FIELD_NAME_INTERRUPT_ON_ERROR TargetFieldName = 8
)

// Enum value maps for TargetFieldName.
var (
	TargetFieldName_name = map[int32]string{
		0: "TARGET_FIELD_NAME_UNSPECIFIED",
		1: "TARGET_FIELD_NAME_ID",
		2: "TARGET_FIELD_NAME_CREATED_DATE",
		3: "TARGET_FIELD_NAME_CHANGED_DATE",
		4: "TARGET_FIELD_NAME_NAME",
		5: "TARGET_FIELD_NAME_TARGET_TYPE",
		6: "TARGET_FIELD_NAME_URL",
		7: "TARGET_FIELD_NAME_TIMEOUT",
		8: "TARGET_FIELD_NAME_INTERRUPT_ON_ERROR",
	}
	TargetFieldName_value = map[string]int32{
		"TARGET_FIELD_NAME_UNSPECIFIED":        0,
		"TARGET_FIELD_NAME_ID":                 1,
		"TARGET_FIELD_NAME_CREATED_DATE":       2,
		"TARGET_FIELD_NAME_CHANGED_DATE":       3,
		"TARGET_FIELD_NAME_NAME":               4,
		"TARGET_FIELD_NAME_TARGET_TYPE":        5,
		"TARGET_FIELD_NAME_URL":                6,
		"TARGET_FIELD_NAME_TIMEOUT":            7,
		"TARGET_FIELD_NAME_INTERRUPT_ON_ERROR": 8,
	}
)

func (x TargetFieldName) Enum() *TargetFieldName {
	p := new(TargetFieldName)
	*p = x
	return p
}

func (x TargetFieldName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetFieldName) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_action_v2_query_proto_enumTypes[0].Descriptor()
}

func (TargetFieldName) Type() protoreflect.EnumType {
	return &file_zitadel_action_v2_query_proto_enumTypes[0]
}

func (x TargetFieldName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetFieldName.Descriptor instead.
func (TargetFieldName) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{0}
}

type ExecutionType int32

const (
	ExecutionType_EXECUTION_TYPE_UNSPECIFIED ExecutionType = 0
	ExecutionType_EXECUTION_TYPE_REQUEST     ExecutionType = 1
	ExecutionType_EXECUTION_TYPE_RESPONSE    ExecutionType = 2
	ExecutionType_EXECUTION_TYPE_EVENT       ExecutionType = 3
	ExecutionType_EXECUTION_TYPE_FUNCTION    ExecutionType = 4
)

// Enum value maps for ExecutionType.
var (
	ExecutionType_name = map[int32]string{
		0: "EXECUTION_TYPE_UNSPECIFIED",
		1: "EXECUTION_TYPE_REQUEST",
		2: "EXECUTION_TYPE_RESPONSE",
		3: "EXECUTION_TYPE_EVENT",
		4: "EXECUTION_TYPE_FUNCTION",
	}
	ExecutionType_value = map[string]int32{
		"EXECUTION_TYPE_UNSPECIFIED": 0,
		"EXECUTION_TYPE_REQUEST":     1,
		"EXECUTION_TYPE_RESPONSE":    2,
		"EXECUTION_TYPE_EVENT":       3,
		"EXECUTION_TYPE_FUNCTION":    4,
	}
)

func (x ExecutionType) Enum() *ExecutionType {
	p := new(ExecutionType)
	*p = x
	return p
}

func (x ExecutionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionType) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_action_v2_query_proto_enumTypes[1].Descriptor()
}

func (ExecutionType) Type() protoreflect.EnumType {
	return &file_zitadel_action_v2_query_proto_enumTypes[1]
}

func (x ExecutionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionType.Descriptor instead.
func (ExecutionType) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{1}
}

type ExecutionFieldName int32

const (
	ExecutionFieldName_EXECUTION_FIELD_NAME_UNSPECIFIED  ExecutionFieldName = 0
	ExecutionFieldName_EXECUTION_FIELD_NAME_ID           ExecutionFieldName = 1
	ExecutionFieldName_EXECUTION_FIELD_NAME_CREATED_DATE ExecutionFieldName = 2
	ExecutionFieldName_EXECUTION_FIELD_NAME_CHANGED_DATE ExecutionFieldName = 3
)

// Enum value maps for ExecutionFieldName.
var (
	ExecutionFieldName_name = map[int32]string{
		0: "EXECUTION_FIELD_NAME_UNSPECIFIED",
		1: "EXECUTION_FIELD_NAME_ID",
		2: "EXECUTION_FIELD_NAME_CREATED_DATE",
		3: "EXECUTION_FIELD_NAME_CHANGED_DATE",
	}
	ExecutionFieldName_value = map[string]int32{
		"EXECUTION_FIELD_NAME_UNSPECIFIED":  0,
		"EXECUTION_FIELD_NAME_ID":           1,
		"EXECUTION_FIELD_NAME_CREATED_DATE": 2,
		"EXECUTION_FIELD_NAME_CHANGED_DATE": 3,
	}
)

func (x ExecutionFieldName) Enum() *ExecutionFieldName {
	p := new(ExecutionFieldName)
	*p = x
	return p
}

func (x ExecutionFieldName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionFieldName) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_action_v2_query_proto_enumTypes[2].Descriptor()
}

func (ExecutionFieldName) Type() protoreflect.EnumType {
	return &file_zitadel_action_v2_query_proto_enumTypes[2]
}

func (x ExecutionFieldName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionFieldName.Descriptor instead.
func (ExecutionFieldName) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{2}
}

type ExecutionSearchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*ExecutionSearchFilter_InConditionsFilter
	//	*ExecutionSearchFilter_ExecutionTypeFilter
	//	*ExecutionSearchFilter_TargetFilter
	Filter isExecutionSearchFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ExecutionSearchFilter) Reset() {
	*x = ExecutionSearchFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionSearchFilter) ProtoMessage() {}

func (x *ExecutionSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionSearchFilter.ProtoReflect.Descriptor instead.
func (*ExecutionSearchFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{0}
}

func (m *ExecutionSearchFilter) GetFilter() isExecutionSearchFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ExecutionSearchFilter) GetInConditionsFilter() *InConditionsFilter {
	if x, ok := x.GetFilter().(*ExecutionSearchFilter_InConditionsFilter); ok {
		return x.InConditionsFilter
	}
	return nil
}

func (x *ExecutionSearchFilter) GetExecutionTypeFilter() *ExecutionTypeFilter {
	if x, ok := x.GetFilter().(*ExecutionSearchFilter_ExecutionTypeFilter); ok {
		return x.ExecutionTypeFilter
	}
	return nil
}

func (x *ExecutionSearchFilter) GetTargetFilter() *TargetFilter {
	if x, ok := x.GetFilter().(*ExecutionSearchFilter_TargetFilter); ok {
		return x.TargetFilter
	}
	return nil
}

type isExecutionSearchFilter_Filter interface {
	isExecutionSearchFilter_Filter()
}

type ExecutionSearchFilter_InConditionsFilter struct {
	// Filter for executions that are executed when certain conditions are met.
	InConditionsFilter *InConditionsFilter `protobuf:"bytes,1,opt,name=in_conditions_filter,json=inConditionsFilter,proto3,oneof"`
}

type ExecutionSearchFilter_ExecutionTypeFilter struct {
	// Filter for executions of a certain type.
	ExecutionTypeFilter *ExecutionTypeFilter `protobuf:"bytes,2,opt,name=execution_type_filter,json=executionTypeFilter,proto3,oneof"`
}

type ExecutionSearchFilter_TargetFilter struct {
	// Filter for executions that include a specific target.
	TargetFilter *TargetFilter `protobuf:"bytes,3,opt,name=target_filter,json=targetFilter,proto3,oneof"`
}

func (*ExecutionSearchFilter_InConditionsFilter) isExecutionSearchFilter_Filter() {}

func (*ExecutionSearchFilter_ExecutionTypeFilter) isExecutionSearchFilter_Filter() {}

func (*ExecutionSearchFilter_TargetFilter) isExecutionSearchFilter_Filter() {}

type InConditionsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines the conditions to query for.
	Conditions []*Condition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *InConditionsFilter) Reset() {
	*x = InConditionsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InConditionsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InConditionsFilter) ProtoMessage() {}

func (x *InConditionsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InConditionsFilter.ProtoReflect.Descriptor instead.
func (*InConditionsFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{1}
}

func (x *InConditionsFilter) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ExecutionTypeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines the type to query for.
	ExecutionType ExecutionType `protobuf:"varint,1,opt,name=execution_type,json=executionType,proto3,enum=zitadel.action.v2.ExecutionType" json:"execution_type,omitempty"`
}

func (x *ExecutionTypeFilter) Reset() {
	*x = ExecutionTypeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionTypeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionTypeFilter) ProtoMessage() {}

func (x *ExecutionTypeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionTypeFilter.ProtoReflect.Descriptor instead.
func (*ExecutionTypeFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{2}
}

func (x *ExecutionTypeFilter) GetExecutionType() ExecutionType {
	if x != nil {
		return x.ExecutionType
	}
	return ExecutionType_EXECUTION_TYPE_UNSPECIFIED
}

type TargetFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines the id of the target that needs to be part of the execution.
	TargetId string `protobuf:"bytes,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *TargetFilter) Reset() {
	*x = TargetFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetFilter) ProtoMessage() {}

func (x *TargetFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetFilter.ProtoReflect.Descriptor instead.
func (*TargetFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{3}
}

func (x *TargetFilter) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type TargetSearchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*TargetSearchFilter_TargetNameFilter
	//	*TargetSearchFilter_InTargetIdsFilter
	Filter isTargetSearchFilter_Filter `protobuf_oneof:"filter"`
}

func (x *TargetSearchFilter) Reset() {
	*x = TargetSearchFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetSearchFilter) ProtoMessage() {}

func (x *TargetSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetSearchFilter.ProtoReflect.Descriptor instead.
func (*TargetSearchFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{4}
}

func (m *TargetSearchFilter) GetFilter() isTargetSearchFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *TargetSearchFilter) GetTargetNameFilter() *TargetNameFilter {
	if x, ok := x.GetFilter().(*TargetSearchFilter_TargetNameFilter); ok {
		return x.TargetNameFilter
	}
	return nil
}

func (x *TargetSearchFilter) GetInTargetIdsFilter() *InTargetIDsFilter {
	if x, ok := x.GetFilter().(*TargetSearchFilter_InTargetIdsFilter); ok {
		return x.InTargetIdsFilter
	}
	return nil
}

type isTargetSearchFilter_Filter interface {
	isTargetSearchFilter_Filter()
}

type TargetSearchFilter_TargetNameFilter struct {
	// Filter for targets with a specific name.
	TargetNameFilter *TargetNameFilter `protobuf:"bytes,1,opt,name=target_name_filter,json=targetNameFilter,proto3,oneof"`
}

type TargetSearchFilter_InTargetIdsFilter struct {
	// Filter for targets with specific ids.
	InTargetIdsFilter *InTargetIDsFilter `protobuf:"bytes,2,opt,name=in_target_ids_filter,json=inTargetIdsFilter,proto3,oneof"`
}

func (*TargetSearchFilter_TargetNameFilter) isTargetSearchFilter_Filter() {}

func (*TargetSearchFilter_InTargetIdsFilter) isTargetSearchFilter_Filter() {}

type TargetNameFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines the name of the target to query for.
	TargetName string `protobuf:"bytes,1,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	// Defines which text comparison method used for the name query.
	Method v2.TextFilterMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.filter.v2.TextFilterMethod" json:"method,omitempty"`
}

func (x *TargetNameFilter) Reset() {
	*x = TargetNameFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetNameFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetNameFilter) ProtoMessage() {}

func (x *TargetNameFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetNameFilter.ProtoReflect.Descriptor instead.
func (*TargetNameFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{5}
}

func (x *TargetNameFilter) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *TargetNameFilter) GetMethod() v2.TextFilterMethod {
	if x != nil {
		return x.Method
	}
	return v2.TextFilterMethod(0)
}

type InTargetIDsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines the ids to query for.
	TargetIds []string `protobuf:"bytes,1,rep,name=target_ids,json=targetIds,proto3" json:"target_ids,omitempty"`
}

func (x *InTargetIDsFilter) Reset() {
	*x = InTargetIDsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InTargetIDsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InTargetIDsFilter) ProtoMessage() {}

func (x *InTargetIDsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InTargetIDsFilter.ProtoReflect.Descriptor instead.
func (*InTargetIDsFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_query_proto_rawDescGZIP(), []int{6}
}

func (x *InTargetIDsFilter) GetTargetIds() []string {
	if x != nil {
		return x.TargetIds
	}
	return nil
}

var File_zitadel_action_v2_query_proto protoreflect.FileDescriptor

var file_zitadel_action_v2_query_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x32,
	0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa7, 0x02, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x14, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x12, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x52, 0x0a, 0x12, 0x49, 0x6e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e,
	0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45,
	0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39, 0x36, 0x32, 0x39, 0x30, 0x32,
	0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x12,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x57, 0x0a, 0x14, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x40,
	0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1f, 0x92, 0x41, 0x14, 0x4a, 0x0f, 0x22, 0x69, 0x70, 0x5f, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x78, 0xc8, 0x01, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x62, 0x0a, 0x11, 0x49, 0x6e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x44, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x2e, 0x92, 0x41, 0x2b, 0x4a, 0x29, 0x5b, 0x22, 0x36, 0x39, 0x36, 0x32, 0x39, 0x30, 0x32,
	0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22, 0x2c, 0x22, 0x36, 0x39, 0x36,
	0x32, 0x32, 0x33, 0x36, 0x36, 0x30, 0x31, 0x32, 0x33, 0x35, 0x35, 0x36, 0x36, 0x32, 0x22, 0x5d,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x2a, 0xb9, 0x02, 0x0a, 0x0f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x1d, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x22, 0x0a, 0x1e, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04,
	0x12, 0x21, 0x0a, 0x1d, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x06, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x07, 0x12, 0x28, 0x0a,
	0x24, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x5f, 0x4f, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x2a, 0x9f, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17,
	0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0xa5, 0x01, 0x0a, 0x12, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x20, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x49,
	0x44, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x58,
	0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x03, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x32, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_zitadel_action_v2_query_proto_rawDescOnce sync.Once
	file_zitadel_action_v2_query_proto_rawDescData = file_zitadel_action_v2_query_proto_rawDesc
)

func file_zitadel_action_v2_query_proto_rawDescGZIP() []byte {
	file_zitadel_action_v2_query_proto_rawDescOnce.Do(func() {
		file_zitadel_action_v2_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_action_v2_query_proto_rawDescData)
	})
	return file_zitadel_action_v2_query_proto_rawDescData
}

var file_zitadel_action_v2_query_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_zitadel_action_v2_query_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_zitadel_action_v2_query_proto_goTypes = []interface{}{
	(TargetFieldName)(0),          // 0: zitadel.action.v2.TargetFieldName
	(ExecutionType)(0),            // 1: zitadel.action.v2.ExecutionType
	(ExecutionFieldName)(0),       // 2: zitadel.action.v2.ExecutionFieldName
	(*ExecutionSearchFilter)(nil), // 3: zitadel.action.v2.ExecutionSearchFilter
	(*InConditionsFilter)(nil),    // 4: zitadel.action.v2.InConditionsFilter
	(*ExecutionTypeFilter)(nil),   // 5: zitadel.action.v2.ExecutionTypeFilter
	(*TargetFilter)(nil),          // 6: zitadel.action.v2.TargetFilter
	(*TargetSearchFilter)(nil),    // 7: zitadel.action.v2.TargetSearchFilter
	(*TargetNameFilter)(nil),      // 8: zitadel.action.v2.TargetNameFilter
	(*InTargetIDsFilter)(nil),     // 9: zitadel.action.v2.InTargetIDsFilter
	(*Condition)(nil),             // 10: zitadel.action.v2.Condition
	(v2.TextFilterMethod)(0),      // 11: zitadel.filter.v2.TextFilterMethod
}
var file_zitadel_action_v2_query_proto_depIdxs = []int32{
	4,  // 0: zitadel.action.v2.ExecutionSearchFilter.in_conditions_filter:type_name -> zitadel.action.v2.InConditionsFilter
	5,  // 1: zitadel.action.v2.ExecutionSearchFilter.execution_type_filter:type_name -> zitadel.action.v2.ExecutionTypeFilter
	6,  // 2: zitadel.action.v2.ExecutionSearchFilter.target_filter:type_name -> zitadel.action.v2.TargetFilter
	10, // 3: zitadel.action.v2.InConditionsFilter.conditions:type_name -> zitadel.action.v2.Condition
	1,  // 4: zitadel.action.v2.ExecutionTypeFilter.execution_type:type_name -> zitadel.action.v2.ExecutionType
	8,  // 5: zitadel.action.v2.TargetSearchFilter.target_name_filter:type_name -> zitadel.action.v2.TargetNameFilter
	9,  // 6: zitadel.action.v2.TargetSearchFilter.in_target_ids_filter:type_name -> zitadel.action.v2.InTargetIDsFilter
	11, // 7: zitadel.action.v2.TargetNameFilter.method:type_name -> zitadel.filter.v2.TextFilterMethod
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_zitadel_action_v2_query_proto_init() }
func file_zitadel_action_v2_query_proto_init() {
	if File_zitadel_action_v2_query_proto != nil {
		return
	}
	file_zitadel_action_v2_execution_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zitadel_action_v2_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionSearchFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InConditionsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionTypeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetSearchFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetNameFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InTargetIDsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_action_v2_query_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ExecutionSearchFilter_InConditionsFilter)(nil),
		(*ExecutionSearchFilter_ExecutionTypeFilter)(nil),
		(*ExecutionSearchFilter_TargetFilter)(nil),
	}
	file_zitadel_action_v2_query_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TargetSearchFilter_TargetNameFilter)(nil),
		(*TargetSearchFilter_InTargetIdsFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_action_v2_query_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_action_v2_query_proto_goTypes,
		DependencyIndexes: file_zitadel_action_v2_query_proto_depIdxs,
		EnumInfos:         file_zitadel_action_v2_query_proto_enumTypes,
		MessageInfos:      file_zitadel_action_v2_query_proto_msgTypes,
	}.Build()
	File_zitadel_action_v2_query_proto = out.File
	file_zitadel_action_v2_query_proto_rawDesc = nil
	file_zitadel_action_v2_query_proto_goTypes = nil
	file_zitadel_action_v2_query_proto_depIdxs = nil
}
