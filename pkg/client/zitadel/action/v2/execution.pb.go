// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/action/v2/execution.proto

package action

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/zitadel/zitadel-go/v3/pkg/client/zitadel/protoc/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *Condition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	// The timestamp of the execution creation.
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	// The timestamp of the last change to the execution.
	ChangeDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=change_date,json=changeDate,proto3" json:"change_date,omitempty"`
	// Ordered list of targets called during the execution.
	Targets []string `protobuf:"bytes,4,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *Execution) Reset() {
	*x = Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_execution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_execution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_execution_proto_rawDescGZIP(), []int{0}
}

func (x *Execution) GetCondition() *Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *Execution) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Execution) GetChangeDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeDate
	}
	return nil
}

func (x *Execution) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition-types under which conditions the execution should happen, only one possible.
	//
	// Types that are assignable to ConditionType:
	//
	//	*Condition_Request
	//	*Condition_Response
	//	*Condition_Function
	//	*Condition_Event
	ConditionType isCondition_ConditionType `protobuf_oneof:"condition_type"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_execution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_execution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_execution_proto_rawDescGZIP(), []int{1}
}

func (m *Condition) GetConditionType() isCondition_ConditionType {
	if m != nil {
		return m.ConditionType
	}
	return nil
}

func (x *Condition) GetRequest() *RequestExecution {
	if x, ok := x.GetConditionType().(*Condition_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Condition) GetResponse() *ResponseExecution {
	if x, ok := x.GetConditionType().(*Condition_Response); ok {
		return x.Response
	}
	return nil
}

func (x *Condition) GetFunction() *FunctionExecution {
	if x, ok := x.GetConditionType().(*Condition_Function); ok {
		return x.Function
	}
	return nil
}

func (x *Condition) GetEvent() *EventExecution {
	if x, ok := x.GetConditionType().(*Condition_Event); ok {
		return x.Event
	}
	return nil
}

type isCondition_ConditionType interface {
	isCondition_ConditionType()
}

type Condition_Request struct {
	// Condition-type to execute if a request on the defined API point happens.
	Request *RequestExecution `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type Condition_Response struct {
	// Condition-type to execute on response if a request on the defined API point happens.
	Response *ResponseExecution `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type Condition_Function struct {
	// Condition-type to execute if function is used, replaces actions v1.
	Function *FunctionExecution `protobuf:"bytes,3,opt,name=function,proto3,oneof"`
}

type Condition_Event struct {
	// Condition-type to execute if an event is created in the system.
	Event *EventExecution `protobuf:"bytes,4,opt,name=event,proto3,oneof"`
}

func (*Condition_Request) isCondition_ConditionType() {}

func (*Condition_Response) isCondition_ConditionType() {}

func (*Condition_Function) isCondition_ConditionType() {}

func (*Condition_Event) isCondition_ConditionType() {}

type RequestExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition for the request execution. Only one is possible.
	//
	// Types that are assignable to Condition:
	//
	//	*RequestExecution_Method
	//	*RequestExecution_Service
	//	*RequestExecution_All
	Condition isRequestExecution_Condition `protobuf_oneof:"condition"`
}

func (x *RequestExecution) Reset() {
	*x = RequestExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_execution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestExecution) ProtoMessage() {}

func (x *RequestExecution) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_execution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestExecution.ProtoReflect.Descriptor instead.
func (*RequestExecution) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_execution_proto_rawDescGZIP(), []int{2}
}

func (m *RequestExecution) GetCondition() isRequestExecution_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *RequestExecution) GetMethod() string {
	if x, ok := x.GetCondition().(*RequestExecution_Method); ok {
		return x.Method
	}
	return ""
}

func (x *RequestExecution) GetService() string {
	if x, ok := x.GetCondition().(*RequestExecution_Service); ok {
		return x.Service
	}
	return ""
}

func (x *RequestExecution) GetAll() bool {
	if x, ok := x.GetCondition().(*RequestExecution_All); ok {
		return x.All
	}
	return false
}

type isRequestExecution_Condition interface {
	isRequestExecution_Condition()
}

type RequestExecution_Method struct {
	// GRPC-method as condition.
	Method string `protobuf:"bytes,1,opt,name=method,proto3,oneof"`
}

type RequestExecution_Service struct {
	// GRPC-service as condition.
	Service string `protobuf:"bytes,2,opt,name=service,proto3,oneof"`
}

type RequestExecution_All struct {
	// All calls to any available services and methods as condition.
	All bool `protobuf:"varint,3,opt,name=all,proto3,oneof"`
}

func (*RequestExecution_Method) isRequestExecution_Condition() {}

func (*RequestExecution_Service) isRequestExecution_Condition() {}

func (*RequestExecution_All) isRequestExecution_Condition() {}

type ResponseExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition for the response execution. Only one is possible.
	//
	// Types that are assignable to Condition:
	//
	//	*ResponseExecution_Method
	//	*ResponseExecution_Service
	//	*ResponseExecution_All
	Condition isResponseExecution_Condition `protobuf_oneof:"condition"`
}

func (x *ResponseExecution) Reset() {
	*x = ResponseExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_execution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseExecution) ProtoMessage() {}

func (x *ResponseExecution) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_execution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseExecution.ProtoReflect.Descriptor instead.
func (*ResponseExecution) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_execution_proto_rawDescGZIP(), []int{3}
}

func (m *ResponseExecution) GetCondition() isResponseExecution_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *ResponseExecution) GetMethod() string {
	if x, ok := x.GetCondition().(*ResponseExecution_Method); ok {
		return x.Method
	}
	return ""
}

func (x *ResponseExecution) GetService() string {
	if x, ok := x.GetCondition().(*ResponseExecution_Service); ok {
		return x.Service
	}
	return ""
}

func (x *ResponseExecution) GetAll() bool {
	if x, ok := x.GetCondition().(*ResponseExecution_All); ok {
		return x.All
	}
	return false
}

type isResponseExecution_Condition interface {
	isResponseExecution_Condition()
}

type ResponseExecution_Method struct {
	// GRPC-method as condition.
	Method string `protobuf:"bytes,1,opt,name=method,proto3,oneof"`
}

type ResponseExecution_Service struct {
	// GRPC-service as condition.
	Service string `protobuf:"bytes,2,opt,name=service,proto3,oneof"`
}

type ResponseExecution_All struct {
	// All calls to any available services and methods as condition.
	All bool `protobuf:"varint,3,opt,name=all,proto3,oneof"`
}

func (*ResponseExecution_Method) isResponseExecution_Condition() {}

func (*ResponseExecution_Service) isResponseExecution_Condition() {}

func (*ResponseExecution_All) isResponseExecution_Condition() {}

// Executed on the specified function
type FunctionExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FunctionExecution) Reset() {
	*x = FunctionExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_execution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionExecution) ProtoMessage() {}

func (x *FunctionExecution) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_execution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionExecution.ProtoReflect.Descriptor instead.
func (*FunctionExecution) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_execution_proto_rawDescGZIP(), []int{4}
}

func (x *FunctionExecution) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition for the event execution. Only one is possible.
	//
	// Types that are assignable to Condition:
	//
	//	*EventExecution_Event
	//	*EventExecution_Group
	//	*EventExecution_All
	Condition isEventExecution_Condition `protobuf_oneof:"condition"`
}

func (x *EventExecution) Reset() {
	*x = EventExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_action_v2_execution_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventExecution) ProtoMessage() {}

func (x *EventExecution) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_action_v2_execution_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventExecution.ProtoReflect.Descriptor instead.
func (*EventExecution) Descriptor() ([]byte, []int) {
	return file_zitadel_action_v2_execution_proto_rawDescGZIP(), []int{5}
}

func (m *EventExecution) GetCondition() isEventExecution_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *EventExecution) GetEvent() string {
	if x, ok := x.GetCondition().(*EventExecution_Event); ok {
		return x.Event
	}
	return ""
}

func (x *EventExecution) GetGroup() string {
	if x, ok := x.GetCondition().(*EventExecution_Group); ok {
		return x.Group
	}
	return ""
}

func (x *EventExecution) GetAll() bool {
	if x, ok := x.GetCondition().(*EventExecution_All); ok {
		return x.All
	}
	return false
}

type isEventExecution_Condition interface {
	isEventExecution_Condition()
}

type EventExecution_Event struct {
	// Event name as condition.
	Event string `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type EventExecution_Group struct {
	// Event group as condition, all events under this group.
	Group string `protobuf:"bytes,2,opt,name=group,proto3,oneof"`
}

type EventExecution_All struct {
	// all events as condition.
	All bool `protobuf:"varint,3,opt,name=all,proto3,oneof"`
}

func (*EventExecution_Event) isEventExecution_Condition() {}

func (*EventExecution_Group) isEventExecution_Condition() {}

func (*EventExecution_All) isEventExecution_Condition() {}

var File_zitadel_action_v2_execution_proto protoreflect.FileDescriptor

var file_zitadel_action_v2_execution_proto_rawDesc = []byte{
	0x0a, 0x21, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x5f, 0x67, 0x65, 0x6e,
	0x5f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x02, 0x0a, 0x09, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32,
	0x30, 0x32, 0x34, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x38, 0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a,
	0x34, 0x37, 0x2e, 0x34, 0x39, 0x32, 0x5a, 0x22, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32,
	0x30, 0x32, 0x35, 0x2d, 0x30, 0x31, 0x2d, 0x32, 0x33, 0x54, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x3a,
	0x31, 0x38, 0x2e, 0x30, 0x35, 0x31, 0x5a, 0x22, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0xa6,
	0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x15, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xf9, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x46, 0x92, 0x41,
	0x39, 0x4a, 0x31, 0x22, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x78, 0xe8, 0x07, 0x80, 0x01, 0x01, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xe8, 0x07, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x54,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x38, 0x92, 0x41, 0x2b, 0x4a, 0x23, 0x22, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x78, 0xe8, 0x07, 0x80, 0x01, 0x01, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x6a, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c,
	0x6c, 0x42, 0x10, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x03,
	0xf8, 0x42, 0x01, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x46, 0x92, 0x41, 0x39, 0x4a, 0x31,
	0x22, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x78, 0xe8, 0x07, 0x80, 0x01, 0x01, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8,
	0x07, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x54, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41,
	0x2b, 0x4a, 0x23, 0x22, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x78, 0xe8, 0x07, 0x80, 0x01, 0x01, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x6a, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x42, 0x10,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x03, 0xf8, 0x42, 0x01,
	0x22, 0x33, 0x0a, 0x11, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x1a, 0x4a, 0x12, 0x22, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x2e, 0x61, 0x64, 0x64, 0x65, 0x64, 0x22,
	0x78, 0xe8, 0x07, 0x80, 0x01, 0x01, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x92, 0x41, 0x14, 0x4a, 0x0c, 0x22,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x22, 0x78, 0xe8, 0x07, 0x80, 0x01,
	0x01, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x48, 0x00, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x6a, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c,
	0x6c, 0x42, 0x10, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x03,
	0xf8, 0x42, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_zitadel_action_v2_execution_proto_rawDescOnce sync.Once
	file_zitadel_action_v2_execution_proto_rawDescData = file_zitadel_action_v2_execution_proto_rawDesc
)

func file_zitadel_action_v2_execution_proto_rawDescGZIP() []byte {
	file_zitadel_action_v2_execution_proto_rawDescOnce.Do(func() {
		file_zitadel_action_v2_execution_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_action_v2_execution_proto_rawDescData)
	})
	return file_zitadel_action_v2_execution_proto_rawDescData
}

var file_zitadel_action_v2_execution_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_zitadel_action_v2_execution_proto_goTypes = []interface{}{
	(*Execution)(nil),             // 0: zitadel.action.v2.Execution
	(*Condition)(nil),             // 1: zitadel.action.v2.Condition
	(*RequestExecution)(nil),      // 2: zitadel.action.v2.RequestExecution
	(*ResponseExecution)(nil),     // 3: zitadel.action.v2.ResponseExecution
	(*FunctionExecution)(nil),     // 4: zitadel.action.v2.FunctionExecution
	(*EventExecution)(nil),        // 5: zitadel.action.v2.EventExecution
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_zitadel_action_v2_execution_proto_depIdxs = []int32{
	1, // 0: zitadel.action.v2.Execution.condition:type_name -> zitadel.action.v2.Condition
	6, // 1: zitadel.action.v2.Execution.creation_date:type_name -> google.protobuf.Timestamp
	6, // 2: zitadel.action.v2.Execution.change_date:type_name -> google.protobuf.Timestamp
	2, // 3: zitadel.action.v2.Condition.request:type_name -> zitadel.action.v2.RequestExecution
	3, // 4: zitadel.action.v2.Condition.response:type_name -> zitadel.action.v2.ResponseExecution
	4, // 5: zitadel.action.v2.Condition.function:type_name -> zitadel.action.v2.FunctionExecution
	5, // 6: zitadel.action.v2.Condition.event:type_name -> zitadel.action.v2.EventExecution
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_zitadel_action_v2_execution_proto_init() }
func file_zitadel_action_v2_execution_proto_init() {
	if File_zitadel_action_v2_execution_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_action_v2_execution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_execution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_execution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_execution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_execution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_action_v2_execution_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_action_v2_execution_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Condition_Request)(nil),
		(*Condition_Response)(nil),
		(*Condition_Function)(nil),
		(*Condition_Event)(nil),
	}
	file_zitadel_action_v2_execution_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*RequestExecution_Method)(nil),
		(*RequestExecution_Service)(nil),
		(*RequestExecution_All)(nil),
	}
	file_zitadel_action_v2_execution_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ResponseExecution_Method)(nil),
		(*ResponseExecution_Service)(nil),
		(*ResponseExecution_All)(nil),
	}
	file_zitadel_action_v2_execution_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*EventExecution_Event)(nil),
		(*EventExecution_Group)(nil),
		(*EventExecution_All)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_action_v2_execution_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_action_v2_execution_proto_goTypes,
		DependencyIndexes: file_zitadel_action_v2_execution_proto_depIdxs,
		MessageInfos:      file_zitadel_action_v2_execution_proto_msgTypes,
	}.Build()
	File_zitadel_action_v2_execution_proto = out.File
	file_zitadel_action_v2_execution_proto_rawDesc = nil
	file_zitadel_action_v2_execution_proto_goTypes = nil
	file_zitadel_action_v2_execution_proto_depIdxs = nil
}
