// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/org/v2beta/org.proto

package org

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v2beta "github.com/zitadel/zitadel-go/v3/pkg/client/zitadel/object/v2beta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrgState int32

const (
	OrgState_ORG_STATE_UNSPECIFIED OrgState = 0
	OrgState_ORG_STATE_ACTIVE      OrgState = 1
	OrgState_ORG_STATE_INACTIVE    OrgState = 2
	OrgState_ORG_STATE_REMOVED     OrgState = 3
)

// Enum value maps for OrgState.
var (
	OrgState_name = map[int32]string{
		0: "ORG_STATE_UNSPECIFIED",
		1: "ORG_STATE_ACTIVE",
		2: "ORG_STATE_INACTIVE",
		3: "ORG_STATE_REMOVED",
	}
	OrgState_value = map[string]int32{
		"ORG_STATE_UNSPECIFIED": 0,
		"ORG_STATE_ACTIVE":      1,
		"ORG_STATE_INACTIVE":    2,
		"ORG_STATE_REMOVED":     3,
	}
)

func (x OrgState) Enum() *OrgState {
	p := new(OrgState)
	*p = x
	return p
}

func (x OrgState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrgState) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_org_v2beta_org_proto_enumTypes[0].Descriptor()
}

func (OrgState) Type() protoreflect.EnumType {
	return &file_zitadel_org_v2beta_org_proto_enumTypes[0]
}

func (x OrgState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrgState.Descriptor instead.
func (OrgState) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{0}
}

type OrgFieldName int32

const (
	OrgFieldName_ORG_FIELD_NAME_UNSPECIFIED   OrgFieldName = 0
	OrgFieldName_ORG_FIELD_NAME_NAME          OrgFieldName = 1
	OrgFieldName_ORG_FIELD_NAME_CREATION_DATE OrgFieldName = 2
)

// Enum value maps for OrgFieldName.
var (
	OrgFieldName_name = map[int32]string{
		0: "ORG_FIELD_NAME_UNSPECIFIED",
		1: "ORG_FIELD_NAME_NAME",
		2: "ORG_FIELD_NAME_CREATION_DATE",
	}
	OrgFieldName_value = map[string]int32{
		"ORG_FIELD_NAME_UNSPECIFIED":   0,
		"ORG_FIELD_NAME_NAME":          1,
		"ORG_FIELD_NAME_CREATION_DATE": 2,
	}
)

func (x OrgFieldName) Enum() *OrgFieldName {
	p := new(OrgFieldName)
	*p = x
	return p
}

func (x OrgFieldName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrgFieldName) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_org_v2beta_org_proto_enumTypes[1].Descriptor()
}

func (OrgFieldName) Type() protoreflect.EnumType {
	return &file_zitadel_org_v2beta_org_proto_enumTypes[1]
}

func (x OrgFieldName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrgFieldName.Descriptor instead.
func (OrgFieldName) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{1}
}

// from proto/zitadel/org.proto
type DomainValidationType int32

const (
	DomainValidationType_DOMAIN_VALIDATION_TYPE_UNSPECIFIED DomainValidationType = 0
	DomainValidationType_DOMAIN_VALIDATION_TYPE_HTTP        DomainValidationType = 1
	DomainValidationType_DOMAIN_VALIDATION_TYPE_DNS         DomainValidationType = 2
)

// Enum value maps for DomainValidationType.
var (
	DomainValidationType_name = map[int32]string{
		0: "DOMAIN_VALIDATION_TYPE_UNSPECIFIED",
		1: "DOMAIN_VALIDATION_TYPE_HTTP",
		2: "DOMAIN_VALIDATION_TYPE_DNS",
	}
	DomainValidationType_value = map[string]int32{
		"DOMAIN_VALIDATION_TYPE_UNSPECIFIED": 0,
		"DOMAIN_VALIDATION_TYPE_HTTP":        1,
		"DOMAIN_VALIDATION_TYPE_DNS":         2,
	}
)

func (x DomainValidationType) Enum() *DomainValidationType {
	p := new(DomainValidationType)
	*p = x
	return p
}

func (x DomainValidationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainValidationType) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_org_v2beta_org_proto_enumTypes[2].Descriptor()
}

func (DomainValidationType) Type() protoreflect.EnumType {
	return &file_zitadel_org_v2beta_org_proto_enumTypes[2]
}

func (x DomainValidationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainValidationType.Descriptor instead.
func (DomainValidationType) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{2}
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the organization.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp of the organization was created.
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	// The timestamp of the verification of the organization domain.
	ChangedDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=changed_date,json=changedDate,proto3" json:"changed_date,omitempty"`
	// Current state of the organization, for example active, inactive and deleted.
	State OrgState `protobuf:"varint,4,opt,name=state,proto3,enum=zitadel.org.v2beta.OrgState" json:"state,omitempty"`
	// Name of the organization.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Primary domain used in the organization.
	PrimaryDomain string `protobuf:"bytes,6,opt,name=primary_domain,json=primaryDomain,proto3" json:"primary_domain,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{0}
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Organization) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Organization) GetChangedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedDate
	}
	return nil
}

func (x *Organization) GetState() OrgState {
	if x != nil {
		return x.State
	}
	return OrgState_ORG_STATE_UNSPECIFIED
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetPrimaryDomain() string {
	if x != nil {
		return x.PrimaryDomain
	}
	return ""
}

type OrganizationSearchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*OrganizationSearchFilter_NameFilter
	//	*OrganizationSearchFilter_DomainFilter
	//	*OrganizationSearchFilter_StateFilter
	//	*OrganizationSearchFilter_IdFilter
	Filter isOrganizationSearchFilter_Filter `protobuf_oneof:"filter"`
}

func (x *OrganizationSearchFilter) Reset() {
	*x = OrganizationSearchFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationSearchFilter) ProtoMessage() {}

func (x *OrganizationSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationSearchFilter.ProtoReflect.Descriptor instead.
func (*OrganizationSearchFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{1}
}

func (m *OrganizationSearchFilter) GetFilter() isOrganizationSearchFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *OrganizationSearchFilter) GetNameFilter() *OrgNameFilter {
	if x, ok := x.GetFilter().(*OrganizationSearchFilter_NameFilter); ok {
		return x.NameFilter
	}
	return nil
}

func (x *OrganizationSearchFilter) GetDomainFilter() *OrgDomainFilter {
	if x, ok := x.GetFilter().(*OrganizationSearchFilter_DomainFilter); ok {
		return x.DomainFilter
	}
	return nil
}

func (x *OrganizationSearchFilter) GetStateFilter() *OrgStateFilter {
	if x, ok := x.GetFilter().(*OrganizationSearchFilter_StateFilter); ok {
		return x.StateFilter
	}
	return nil
}

func (x *OrganizationSearchFilter) GetIdFilter() *OrgIDFilter {
	if x, ok := x.GetFilter().(*OrganizationSearchFilter_IdFilter); ok {
		return x.IdFilter
	}
	return nil
}

type isOrganizationSearchFilter_Filter interface {
	isOrganizationSearchFilter_Filter()
}

type OrganizationSearchFilter_NameFilter struct {
	NameFilter *OrgNameFilter `protobuf:"bytes,1,opt,name=name_filter,json=nameFilter,proto3,oneof"`
}

type OrganizationSearchFilter_DomainFilter struct {
	DomainFilter *OrgDomainFilter `protobuf:"bytes,2,opt,name=domain_filter,json=domainFilter,proto3,oneof"`
}

type OrganizationSearchFilter_StateFilter struct {
	StateFilter *OrgStateFilter `protobuf:"bytes,3,opt,name=state_filter,json=stateFilter,proto3,oneof"`
}

type OrganizationSearchFilter_IdFilter struct {
	IdFilter *OrgIDFilter `protobuf:"bytes,4,opt,name=id_filter,json=idFilter,proto3,oneof"`
}

func (*OrganizationSearchFilter_NameFilter) isOrganizationSearchFilter_Filter() {}

func (*OrganizationSearchFilter_DomainFilter) isOrganizationSearchFilter_Filter() {}

func (*OrganizationSearchFilter_StateFilter) isOrganizationSearchFilter_Filter() {}

func (*OrganizationSearchFilter_IdFilter) isOrganizationSearchFilter_Filter() {}

type OrgNameFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Organization name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Defines which text equality method is used.
	Method v2beta.TextQueryMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.object.v2beta.TextQueryMethod" json:"method,omitempty"`
}

func (x *OrgNameFilter) Reset() {
	*x = OrgNameFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgNameFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgNameFilter) ProtoMessage() {}

func (x *OrgNameFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgNameFilter.ProtoReflect.Descriptor instead.
func (*OrgNameFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{2}
}

func (x *OrgNameFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgNameFilter) GetMethod() v2beta.TextQueryMethod {
	if x != nil {
		return x.Method
	}
	return v2beta.TextQueryMethod(0)
}

type OrgDomainFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The domain.
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Defines which text equality method is used.
	Method v2beta.TextQueryMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.object.v2beta.TextQueryMethod" json:"method,omitempty"`
}

func (x *OrgDomainFilter) Reset() {
	*x = OrgDomainFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgDomainFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgDomainFilter) ProtoMessage() {}

func (x *OrgDomainFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgDomainFilter.ProtoReflect.Descriptor instead.
func (*OrgDomainFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{3}
}

func (x *OrgDomainFilter) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *OrgDomainFilter) GetMethod() v2beta.TextQueryMethod {
	if x != nil {
		return x.Method
	}
	return v2beta.TextQueryMethod(0)
}

type OrgStateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current state of the organization.
	State OrgState `protobuf:"varint,1,opt,name=state,proto3,enum=zitadel.org.v2beta.OrgState" json:"state,omitempty"`
}

func (x *OrgStateFilter) Reset() {
	*x = OrgStateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgStateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgStateFilter) ProtoMessage() {}

func (x *OrgStateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgStateFilter.ProtoReflect.Descriptor instead.
func (*OrgStateFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{4}
}

func (x *OrgStateFilter) GetState() OrgState {
	if x != nil {
		return x.State
	}
	return OrgState_ORG_STATE_UNSPECIFIED
}

type OrgIDFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Organization id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OrgIDFilter) Reset() {
	*x = OrgIDFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgIDFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgIDFilter) ProtoMessage() {}

func (x *OrgIDFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgIDFilter.ProtoReflect.Descriptor instead.
func (*OrgIDFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{5}
}

func (x *OrgIDFilter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// from proto/zitadel/org.proto
type DomainSearchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*DomainSearchFilter_DomainNameFilter
	Filter isDomainSearchFilter_Filter `protobuf_oneof:"filter"`
}

func (x *DomainSearchFilter) Reset() {
	*x = DomainSearchFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainSearchFilter) ProtoMessage() {}

func (x *DomainSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainSearchFilter.ProtoReflect.Descriptor instead.
func (*DomainSearchFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{6}
}

func (m *DomainSearchFilter) GetFilter() isDomainSearchFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *DomainSearchFilter) GetDomainNameFilter() *DomainNameFilter {
	if x, ok := x.GetFilter().(*DomainSearchFilter_DomainNameFilter); ok {
		return x.DomainNameFilter
	}
	return nil
}

type isDomainSearchFilter_Filter interface {
	isDomainSearchFilter_Filter()
}

type DomainSearchFilter_DomainNameFilter struct {
	DomainNameFilter *DomainNameFilter `protobuf:"bytes,1,opt,name=domain_name_filter,json=domainNameFilter,proto3,oneof"`
}

func (*DomainSearchFilter_DomainNameFilter) isDomainSearchFilter_Filter() {}

// from proto/zitadel/org.proto
type DomainNameFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The domain.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Defines which text equality method is used.
	Method v2beta.TextQueryMethod `protobuf:"varint,2,opt,name=method,proto3,enum=zitadel.object.v2beta.TextQueryMethod" json:"method,omitempty"`
}

func (x *DomainNameFilter) Reset() {
	*x = DomainNameFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainNameFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainNameFilter) ProtoMessage() {}

func (x *DomainNameFilter) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainNameFilter.ProtoReflect.Descriptor instead.
func (*DomainNameFilter) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{7}
}

func (x *DomainNameFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainNameFilter) GetMethod() v2beta.TextQueryMethod {
	if x != nil {
		return x.Method
	}
	return v2beta.TextQueryMethod(0)
}

// from proto/zitadel/org.proto
type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Organization id.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The domain name.
	DomainName string `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	// Defines if the domain is verified.
	IsVerified bool `protobuf:"varint,3,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// Defines if the domain is the primary domain.
	IsPrimary bool `protobuf:"varint,4,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	// Defines the protocol the domain was validated with.
	ValidationType DomainValidationType `protobuf:"varint,5,opt,name=validation_type,json=validationType,proto3,enum=zitadel.org.v2beta.DomainValidationType" json:"validation_type,omitempty"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_org_v2beta_org_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_org_v2beta_org_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_zitadel_org_v2beta_org_proto_rawDescGZIP(), []int{8}
}

func (x *Domain) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Domain) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *Domain) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Domain) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *Domain) GetValidationType() DomainValidationType {
	if x != nil {
		return x.ValidationType
	}
	return DomainValidationType_DOMAIN_VALIDATION_TYPE_UNSPECIFIED
}

var File_zitadel_org_v2beta_org_proto protoreflect.FileDescriptor

var file_zitadel_org_v2beta_org_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x76, 0x32,
	0x62, 0x65, 0x74, 0x61, 0x2f, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8f, 0x03, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92,
	0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39, 0x36, 0x32, 0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36,
	0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1f,
	0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x34, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x38,
	0x54, 0x30, 0x37, 0x3a, 0x35, 0x30, 0x3a, 0x34, 0x37, 0x2e, 0x34, 0x39, 0x32, 0x5a, 0x22, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x1f, 0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x32, 0x30, 0x32, 0x35, 0x2d, 0x30, 0x31, 0x2d, 0x32,
	0x33, 0x54, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x3a, 0x31, 0x38, 0x2e, 0x30, 0x35, 0x31, 0x5a, 0x22,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x4f, 0x72, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x22, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92,
	0x41, 0x11, 0x4a, 0x0f, 0x22, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x22, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x22, 0xc4, 0x02, 0x0a, 0x18, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x44, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x72, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x09, 0x69, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x08, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x4f, 0x72,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x0b, 0x4a, 0x09,
	0x22, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x22, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x92, 0x41, 0x11, 0x4a, 0x0f, 0x22, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xc8, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x48, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x0b, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x20, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39, 0x36, 0x32, 0x39, 0x30, 0x32, 0x33,
	0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x12, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x12,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42,
	0x01, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x92, 0x41, 0x11, 0x4a, 0x0f, 0x22, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x41, 0x0a,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39,
	0x36, 0x32, 0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x4a, 0x0d, 0x22, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x51, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x32, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x6a, 0x0a, 0x08, 0x4f, 0x72, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x52, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x4f, 0x52, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52, 0x47, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x4f, 0x52, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x52, 0x47, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x47, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x4f, 0x52, 0x47, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a,
	0x7f, 0x0a, 0x14, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x4d, 0x41, 0x49,
	0x4e, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01,
	0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4e, 0x53, 0x10, 0x02,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x3b, 0x6f, 0x72, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_org_v2beta_org_proto_rawDescOnce sync.Once
	file_zitadel_org_v2beta_org_proto_rawDescData = file_zitadel_org_v2beta_org_proto_rawDesc
)

func file_zitadel_org_v2beta_org_proto_rawDescGZIP() []byte {
	file_zitadel_org_v2beta_org_proto_rawDescOnce.Do(func() {
		file_zitadel_org_v2beta_org_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_org_v2beta_org_proto_rawDescData)
	})
	return file_zitadel_org_v2beta_org_proto_rawDescData
}

var file_zitadel_org_v2beta_org_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_zitadel_org_v2beta_org_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_zitadel_org_v2beta_org_proto_goTypes = []interface{}{
	(OrgState)(0),                    // 0: zitadel.org.v2beta.OrgState
	(OrgFieldName)(0),                // 1: zitadel.org.v2beta.OrgFieldName
	(DomainValidationType)(0),        // 2: zitadel.org.v2beta.DomainValidationType
	(*Organization)(nil),             // 3: zitadel.org.v2beta.Organization
	(*OrganizationSearchFilter)(nil), // 4: zitadel.org.v2beta.OrganizationSearchFilter
	(*OrgNameFilter)(nil),            // 5: zitadel.org.v2beta.OrgNameFilter
	(*OrgDomainFilter)(nil),          // 6: zitadel.org.v2beta.OrgDomainFilter
	(*OrgStateFilter)(nil),           // 7: zitadel.org.v2beta.OrgStateFilter
	(*OrgIDFilter)(nil),              // 8: zitadel.org.v2beta.OrgIDFilter
	(*DomainSearchFilter)(nil),       // 9: zitadel.org.v2beta.DomainSearchFilter
	(*DomainNameFilter)(nil),         // 10: zitadel.org.v2beta.DomainNameFilter
	(*Domain)(nil),                   // 11: zitadel.org.v2beta.Domain
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
	(v2beta.TextQueryMethod)(0),      // 13: zitadel.object.v2beta.TextQueryMethod
}
var file_zitadel_org_v2beta_org_proto_depIdxs = []int32{
	12, // 0: zitadel.org.v2beta.Organization.creation_date:type_name -> google.protobuf.Timestamp
	12, // 1: zitadel.org.v2beta.Organization.changed_date:type_name -> google.protobuf.Timestamp
	0,  // 2: zitadel.org.v2beta.Organization.state:type_name -> zitadel.org.v2beta.OrgState
	5,  // 3: zitadel.org.v2beta.OrganizationSearchFilter.name_filter:type_name -> zitadel.org.v2beta.OrgNameFilter
	6,  // 4: zitadel.org.v2beta.OrganizationSearchFilter.domain_filter:type_name -> zitadel.org.v2beta.OrgDomainFilter
	7,  // 5: zitadel.org.v2beta.OrganizationSearchFilter.state_filter:type_name -> zitadel.org.v2beta.OrgStateFilter
	8,  // 6: zitadel.org.v2beta.OrganizationSearchFilter.id_filter:type_name -> zitadel.org.v2beta.OrgIDFilter
	13, // 7: zitadel.org.v2beta.OrgNameFilter.method:type_name -> zitadel.object.v2beta.TextQueryMethod
	13, // 8: zitadel.org.v2beta.OrgDomainFilter.method:type_name -> zitadel.object.v2beta.TextQueryMethod
	0,  // 9: zitadel.org.v2beta.OrgStateFilter.state:type_name -> zitadel.org.v2beta.OrgState
	10, // 10: zitadel.org.v2beta.DomainSearchFilter.domain_name_filter:type_name -> zitadel.org.v2beta.DomainNameFilter
	13, // 11: zitadel.org.v2beta.DomainNameFilter.method:type_name -> zitadel.object.v2beta.TextQueryMethod
	2,  // 12: zitadel.org.v2beta.Domain.validation_type:type_name -> zitadel.org.v2beta.DomainValidationType
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_zitadel_org_v2beta_org_proto_init() }
func file_zitadel_org_v2beta_org_proto_init() {
	if File_zitadel_org_v2beta_org_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_org_v2beta_org_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationSearchFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgNameFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgDomainFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgStateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgIDFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainSearchFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainNameFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_org_v2beta_org_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_org_v2beta_org_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*OrganizationSearchFilter_NameFilter)(nil),
		(*OrganizationSearchFilter_DomainFilter)(nil),
		(*OrganizationSearchFilter_StateFilter)(nil),
		(*OrganizationSearchFilter_IdFilter)(nil),
	}
	file_zitadel_org_v2beta_org_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DomainSearchFilter_DomainNameFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_org_v2beta_org_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_org_v2beta_org_proto_goTypes,
		DependencyIndexes: file_zitadel_org_v2beta_org_proto_depIdxs,
		EnumInfos:         file_zitadel_org_v2beta_org_proto_enumTypes,
		MessageInfos:      file_zitadel_org_v2beta_org_proto_msgTypes,
	}.Build()
	File_zitadel_org_v2beta_org_proto = out.File
	file_zitadel_org_v2beta_org_proto_rawDesc = nil
	file_zitadel_org_v2beta_org_proto_goTypes = nil
	file_zitadel_org_v2beta_org_proto_depIdxs = nil
}
