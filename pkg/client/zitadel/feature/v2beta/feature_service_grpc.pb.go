// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: zitadel/feature/v2beta/feature_service.proto

package feature

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FeatureService_SetSystemFeatures_FullMethodName         = "/zitadel.feature.v2beta.FeatureService/SetSystemFeatures"
	FeatureService_ResetSystemFeatures_FullMethodName       = "/zitadel.feature.v2beta.FeatureService/ResetSystemFeatures"
	FeatureService_GetSystemFeatures_FullMethodName         = "/zitadel.feature.v2beta.FeatureService/GetSystemFeatures"
	FeatureService_SetInstanceFeatures_FullMethodName       = "/zitadel.feature.v2beta.FeatureService/SetInstanceFeatures"
	FeatureService_ResetInstanceFeatures_FullMethodName     = "/zitadel.feature.v2beta.FeatureService/ResetInstanceFeatures"
	FeatureService_GetInstanceFeatures_FullMethodName       = "/zitadel.feature.v2beta.FeatureService/GetInstanceFeatures"
	FeatureService_SetOrganizationFeatures_FullMethodName   = "/zitadel.feature.v2beta.FeatureService/SetOrganizationFeatures"
	FeatureService_ResetOrganizationFeatures_FullMethodName = "/zitadel.feature.v2beta.FeatureService/ResetOrganizationFeatures"
	FeatureService_GetOrganizationFeatures_FullMethodName   = "/zitadel.feature.v2beta.FeatureService/GetOrganizationFeatures"
	FeatureService_SetUserFeatures_FullMethodName           = "/zitadel.feature.v2beta.FeatureService/SetUserFeatures"
	FeatureService_ResetUserFeatures_FullMethodName         = "/zitadel.feature.v2beta.FeatureService/ResetUserFeatures"
	FeatureService_GetUserFeatures_FullMethodName           = "/zitadel.feature.v2beta.FeatureService/GetUserFeatures"
)

// FeatureServiceClient is the client API for FeatureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FeatureServiceClient interface {
	SetSystemFeatures(ctx context.Context, in *SetSystemFeaturesRequest, opts ...grpc.CallOption) (*SetSystemFeaturesResponse, error)
	ResetSystemFeatures(ctx context.Context, in *ResetSystemFeaturesRequest, opts ...grpc.CallOption) (*ResetSystemFeaturesResponse, error)
	GetSystemFeatures(ctx context.Context, in *GetSystemFeaturesRequest, opts ...grpc.CallOption) (*GetSystemFeaturesResponse, error)
	SetInstanceFeatures(ctx context.Context, in *SetInstanceFeaturesRequest, opts ...grpc.CallOption) (*SetInstanceFeaturesResponse, error)
	ResetInstanceFeatures(ctx context.Context, in *ResetInstanceFeaturesRequest, opts ...grpc.CallOption) (*ResetInstanceFeaturesResponse, error)
	GetInstanceFeatures(ctx context.Context, in *GetInstanceFeaturesRequest, opts ...grpc.CallOption) (*GetInstanceFeaturesResponse, error)
	SetOrganizationFeatures(ctx context.Context, in *SetOrganizationFeaturesRequest, opts ...grpc.CallOption) (*SetOrganizationFeaturesResponse, error)
	ResetOrganizationFeatures(ctx context.Context, in *ResetOrganizationFeaturesRequest, opts ...grpc.CallOption) (*ResetOrganizationFeaturesResponse, error)
	GetOrganizationFeatures(ctx context.Context, in *GetOrganizationFeaturesRequest, opts ...grpc.CallOption) (*GetOrganizationFeaturesResponse, error)
	SetUserFeatures(ctx context.Context, in *SetUserFeatureRequest, opts ...grpc.CallOption) (*SetUserFeaturesResponse, error)
	ResetUserFeatures(ctx context.Context, in *ResetUserFeaturesRequest, opts ...grpc.CallOption) (*ResetUserFeaturesResponse, error)
	GetUserFeatures(ctx context.Context, in *GetUserFeaturesRequest, opts ...grpc.CallOption) (*GetUserFeaturesResponse, error)
}

type featureServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFeatureServiceClient(cc grpc.ClientConnInterface) FeatureServiceClient {
	return &featureServiceClient{cc}
}

func (c *featureServiceClient) SetSystemFeatures(ctx context.Context, in *SetSystemFeaturesRequest, opts ...grpc.CallOption) (*SetSystemFeaturesResponse, error) {
	out := new(SetSystemFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_SetSystemFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) ResetSystemFeatures(ctx context.Context, in *ResetSystemFeaturesRequest, opts ...grpc.CallOption) (*ResetSystemFeaturesResponse, error) {
	out := new(ResetSystemFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_ResetSystemFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) GetSystemFeatures(ctx context.Context, in *GetSystemFeaturesRequest, opts ...grpc.CallOption) (*GetSystemFeaturesResponse, error) {
	out := new(GetSystemFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_GetSystemFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) SetInstanceFeatures(ctx context.Context, in *SetInstanceFeaturesRequest, opts ...grpc.CallOption) (*SetInstanceFeaturesResponse, error) {
	out := new(SetInstanceFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_SetInstanceFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) ResetInstanceFeatures(ctx context.Context, in *ResetInstanceFeaturesRequest, opts ...grpc.CallOption) (*ResetInstanceFeaturesResponse, error) {
	out := new(ResetInstanceFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_ResetInstanceFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) GetInstanceFeatures(ctx context.Context, in *GetInstanceFeaturesRequest, opts ...grpc.CallOption) (*GetInstanceFeaturesResponse, error) {
	out := new(GetInstanceFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_GetInstanceFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) SetOrganizationFeatures(ctx context.Context, in *SetOrganizationFeaturesRequest, opts ...grpc.CallOption) (*SetOrganizationFeaturesResponse, error) {
	out := new(SetOrganizationFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_SetOrganizationFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) ResetOrganizationFeatures(ctx context.Context, in *ResetOrganizationFeaturesRequest, opts ...grpc.CallOption) (*ResetOrganizationFeaturesResponse, error) {
	out := new(ResetOrganizationFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_ResetOrganizationFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) GetOrganizationFeatures(ctx context.Context, in *GetOrganizationFeaturesRequest, opts ...grpc.CallOption) (*GetOrganizationFeaturesResponse, error) {
	out := new(GetOrganizationFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_GetOrganizationFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) SetUserFeatures(ctx context.Context, in *SetUserFeatureRequest, opts ...grpc.CallOption) (*SetUserFeaturesResponse, error) {
	out := new(SetUserFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_SetUserFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) ResetUserFeatures(ctx context.Context, in *ResetUserFeaturesRequest, opts ...grpc.CallOption) (*ResetUserFeaturesResponse, error) {
	out := new(ResetUserFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_ResetUserFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureServiceClient) GetUserFeatures(ctx context.Context, in *GetUserFeaturesRequest, opts ...grpc.CallOption) (*GetUserFeaturesResponse, error) {
	out := new(GetUserFeaturesResponse)
	err := c.cc.Invoke(ctx, FeatureService_GetUserFeatures_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeatureServiceServer is the server API for FeatureService service.
// All implementations must embed UnimplementedFeatureServiceServer
// for forward compatibility
type FeatureServiceServer interface {
	SetSystemFeatures(context.Context, *SetSystemFeaturesRequest) (*SetSystemFeaturesResponse, error)
	ResetSystemFeatures(context.Context, *ResetSystemFeaturesRequest) (*ResetSystemFeaturesResponse, error)
	GetSystemFeatures(context.Context, *GetSystemFeaturesRequest) (*GetSystemFeaturesResponse, error)
	SetInstanceFeatures(context.Context, *SetInstanceFeaturesRequest) (*SetInstanceFeaturesResponse, error)
	ResetInstanceFeatures(context.Context, *ResetInstanceFeaturesRequest) (*ResetInstanceFeaturesResponse, error)
	GetInstanceFeatures(context.Context, *GetInstanceFeaturesRequest) (*GetInstanceFeaturesResponse, error)
	SetOrganizationFeatures(context.Context, *SetOrganizationFeaturesRequest) (*SetOrganizationFeaturesResponse, error)
	ResetOrganizationFeatures(context.Context, *ResetOrganizationFeaturesRequest) (*ResetOrganizationFeaturesResponse, error)
	GetOrganizationFeatures(context.Context, *GetOrganizationFeaturesRequest) (*GetOrganizationFeaturesResponse, error)
	SetUserFeatures(context.Context, *SetUserFeatureRequest) (*SetUserFeaturesResponse, error)
	ResetUserFeatures(context.Context, *ResetUserFeaturesRequest) (*ResetUserFeaturesResponse, error)
	GetUserFeatures(context.Context, *GetUserFeaturesRequest) (*GetUserFeaturesResponse, error)
	mustEmbedUnimplementedFeatureServiceServer()
}

// UnimplementedFeatureServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFeatureServiceServer struct {
}

func (UnimplementedFeatureServiceServer) SetSystemFeatures(context.Context, *SetSystemFeaturesRequest) (*SetSystemFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSystemFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) ResetSystemFeatures(context.Context, *ResetSystemFeaturesRequest) (*ResetSystemFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetSystemFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) GetSystemFeatures(context.Context, *GetSystemFeaturesRequest) (*GetSystemFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) SetInstanceFeatures(context.Context, *SetInstanceFeaturesRequest) (*SetInstanceFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInstanceFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) ResetInstanceFeatures(context.Context, *ResetInstanceFeaturesRequest) (*ResetInstanceFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetInstanceFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) GetInstanceFeatures(context.Context, *GetInstanceFeaturesRequest) (*GetInstanceFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstanceFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) SetOrganizationFeatures(context.Context, *SetOrganizationFeaturesRequest) (*SetOrganizationFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrganizationFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) ResetOrganizationFeatures(context.Context, *ResetOrganizationFeaturesRequest) (*ResetOrganizationFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetOrganizationFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) GetOrganizationFeatures(context.Context, *GetOrganizationFeaturesRequest) (*GetOrganizationFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) SetUserFeatures(context.Context, *SetUserFeatureRequest) (*SetUserFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) ResetUserFeatures(context.Context, *ResetUserFeaturesRequest) (*ResetUserFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetUserFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) GetUserFeatures(context.Context, *GetUserFeaturesRequest) (*GetUserFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFeatures not implemented")
}
func (UnimplementedFeatureServiceServer) mustEmbedUnimplementedFeatureServiceServer() {}

// UnsafeFeatureServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FeatureServiceServer will
// result in compilation errors.
type UnsafeFeatureServiceServer interface {
	mustEmbedUnimplementedFeatureServiceServer()
}

func RegisterFeatureServiceServer(s grpc.ServiceRegistrar, srv FeatureServiceServer) {
	s.RegisterService(&FeatureService_ServiceDesc, srv)
}

func _FeatureService_SetSystemFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSystemFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).SetSystemFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_SetSystemFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).SetSystemFeatures(ctx, req.(*SetSystemFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_ResetSystemFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetSystemFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).ResetSystemFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_ResetSystemFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).ResetSystemFeatures(ctx, req.(*ResetSystemFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_GetSystemFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).GetSystemFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_GetSystemFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).GetSystemFeatures(ctx, req.(*GetSystemFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_SetInstanceFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetInstanceFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).SetInstanceFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_SetInstanceFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).SetInstanceFeatures(ctx, req.(*SetInstanceFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_ResetInstanceFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetInstanceFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).ResetInstanceFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_ResetInstanceFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).ResetInstanceFeatures(ctx, req.(*ResetInstanceFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_GetInstanceFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstanceFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).GetInstanceFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_GetInstanceFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).GetInstanceFeatures(ctx, req.(*GetInstanceFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_SetOrganizationFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetOrganizationFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).SetOrganizationFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_SetOrganizationFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).SetOrganizationFeatures(ctx, req.(*SetOrganizationFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_ResetOrganizationFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetOrganizationFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).ResetOrganizationFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_ResetOrganizationFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).ResetOrganizationFeatures(ctx, req.(*ResetOrganizationFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_GetOrganizationFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).GetOrganizationFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_GetOrganizationFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).GetOrganizationFeatures(ctx, req.(*GetOrganizationFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_SetUserFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserFeatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).SetUserFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_SetUserFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).SetUserFeatures(ctx, req.(*SetUserFeatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_ResetUserFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetUserFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).ResetUserFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_ResetUserFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).ResetUserFeatures(ctx, req.(*ResetUserFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureService_GetUserFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureServiceServer).GetUserFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FeatureService_GetUserFeatures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureServiceServer).GetUserFeatures(ctx, req.(*GetUserFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FeatureService_ServiceDesc is the grpc.ServiceDesc for FeatureService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FeatureService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "zitadel.feature.v2beta.FeatureService",
	HandlerType: (*FeatureServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetSystemFeatures",
			Handler:    _FeatureService_SetSystemFeatures_Handler,
		},
		{
			MethodName: "ResetSystemFeatures",
			Handler:    _FeatureService_ResetSystemFeatures_Handler,
		},
		{
			MethodName: "GetSystemFeatures",
			Handler:    _FeatureService_GetSystemFeatures_Handler,
		},
		{
			MethodName: "SetInstanceFeatures",
			Handler:    _FeatureService_SetInstanceFeatures_Handler,
		},
		{
			MethodName: "ResetInstanceFeatures",
			Handler:    _FeatureService_ResetInstanceFeatures_Handler,
		},
		{
			MethodName: "GetInstanceFeatures",
			Handler:    _FeatureService_GetInstanceFeatures_Handler,
		},
		{
			MethodName: "SetOrganizationFeatures",
			Handler:    _FeatureService_SetOrganizationFeatures_Handler,
		},
		{
			MethodName: "ResetOrganizationFeatures",
			Handler:    _FeatureService_ResetOrganizationFeatures_Handler,
		},
		{
			MethodName: "GetOrganizationFeatures",
			Handler:    _FeatureService_GetOrganizationFeatures_Handler,
		},
		{
			MethodName: "SetUserFeatures",
			Handler:    _FeatureService_SetUserFeatures_Handler,
		},
		{
			MethodName: "ResetUserFeatures",
			Handler:    _FeatureService_ResetUserFeatures_Handler,
		},
		{
			MethodName: "GetUserFeatures",
			Handler:    _FeatureService_GetUserFeatures_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zitadel/feature/v2beta/feature_service.proto",
}
