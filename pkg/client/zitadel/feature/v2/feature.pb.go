// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/feature/v2/feature.proto

package feature

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Source int32

const (
	Source_SOURCE_UNSPECIFIED  Source = 0
	Source_SOURCE_SYSTEM       Source = 2
	Source_SOURCE_INSTANCE     Source = 3
	Source_SOURCE_ORGANIZATION Source = 4
	Source_SOURCE_PROJECT      Source = 5 // reserved for future use
	Source_SOURCE_APP          Source = 6 // reserved for future use
	Source_SOURCE_USER         Source = 7
)

// Enum value maps for Source.
var (
	Source_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
		2: "SOURCE_SYSTEM",
		3: "SOURCE_INSTANCE",
		4: "SOURCE_ORGANIZATION",
		5: "SOURCE_PROJECT",
		6: "SOURCE_APP",
		7: "SOURCE_USER",
	}
	Source_value = map[string]int32{
		"SOURCE_UNSPECIFIED":  0,
		"SOURCE_SYSTEM":       2,
		"SOURCE_INSTANCE":     3,
		"SOURCE_ORGANIZATION": 4,
		"SOURCE_PROJECT":      5,
		"SOURCE_APP":          6,
		"SOURCE_USER":         7,
	}
)

func (x Source) Enum() *Source {
	p := new(Source)
	*p = x
	return p
}

func (x Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_feature_v2_feature_proto_enumTypes[0].Descriptor()
}

func (Source) Type() protoreflect.EnumType {
	return &file_zitadel_feature_v2_feature_proto_enumTypes[0]
}

func (x Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source.Descriptor instead.
func (Source) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_feature_v2_feature_proto_rawDescGZIP(), []int{0}
}

type ImprovedPerformance int32

const (
	ImprovedPerformance_IMPROVED_PERFORMANCE_UNSPECIFIED ImprovedPerformance = 0
	// Improves performance on write side by using
	// optimized processes to query data to determine
	// correctness of data.
	ImprovedPerformance_IMPROVED_PERFORMANCE_PROJECT_GRANT ImprovedPerformance = 2
	ImprovedPerformance_IMPROVED_PERFORMANCE_PROJECT       ImprovedPerformance = 3
	ImprovedPerformance_IMPROVED_PERFORMANCE_USER_GRANT    ImprovedPerformance = 4
	// Improve performance on write side when
	// users are checked against verified domains
	// from other organizations.
	ImprovedPerformance_IMPROVED_PERFORMANCE_ORG_DOMAIN_VERIFIED ImprovedPerformance = 5
)

// Enum value maps for ImprovedPerformance.
var (
	ImprovedPerformance_name = map[int32]string{
		0: "IMPROVED_PERFORMANCE_UNSPECIFIED",
		2: "IMPROVED_PERFORMANCE_PROJECT_GRANT",
		3: "IMPROVED_PERFORMANCE_PROJECT",
		4: "IMPROVED_PERFORMANCE_USER_GRANT",
		5: "IMPROVED_PERFORMANCE_ORG_DOMAIN_VERIFIED",
	}
	ImprovedPerformance_value = map[string]int32{
		"IMPROVED_PERFORMANCE_UNSPECIFIED":         0,
		"IMPROVED_PERFORMANCE_PROJECT_GRANT":       2,
		"IMPROVED_PERFORMANCE_PROJECT":             3,
		"IMPROVED_PERFORMANCE_USER_GRANT":          4,
		"IMPROVED_PERFORMANCE_ORG_DOMAIN_VERIFIED": 5,
	}
)

func (x ImprovedPerformance) Enum() *ImprovedPerformance {
	p := new(ImprovedPerformance)
	*p = x
	return p
}

func (x ImprovedPerformance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImprovedPerformance) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_feature_v2_feature_proto_enumTypes[1].Descriptor()
}

func (ImprovedPerformance) Type() protoreflect.EnumType {
	return &file_zitadel_feature_v2_feature_proto_enumTypes[1]
}

func (x ImprovedPerformance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImprovedPerformance.Descriptor instead.
func (ImprovedPerformance) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_feature_v2_feature_proto_rawDescGZIP(), []int{1}
}

// FeatureFlag is a simple boolean Feature setting, without further payload.
type FeatureFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Source  Source `protobuf:"varint,2,opt,name=source,proto3,enum=zitadel.feature.v2.Source" json:"source,omitempty"`
}

func (x *FeatureFlag) Reset() {
	*x = FeatureFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_feature_v2_feature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureFlag) ProtoMessage() {}

func (x *FeatureFlag) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_feature_v2_feature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureFlag.ProtoReflect.Descriptor instead.
func (*FeatureFlag) Descriptor() ([]byte, []int) {
	return file_zitadel_feature_v2_feature_proto_rawDescGZIP(), []int{0}
}

func (x *FeatureFlag) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FeatureFlag) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_SOURCE_UNSPECIFIED
}

type ImprovedPerformanceFeatureFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionPaths []ImprovedPerformance `protobuf:"varint,1,rep,packed,name=execution_paths,json=executionPaths,proto3,enum=zitadel.feature.v2.ImprovedPerformance" json:"execution_paths,omitempty"`
	Source         Source                `protobuf:"varint,2,opt,name=source,proto3,enum=zitadel.feature.v2.Source" json:"source,omitempty"`
}

func (x *ImprovedPerformanceFeatureFlag) Reset() {
	*x = ImprovedPerformanceFeatureFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_feature_v2_feature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImprovedPerformanceFeatureFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImprovedPerformanceFeatureFlag) ProtoMessage() {}

func (x *ImprovedPerformanceFeatureFlag) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_feature_v2_feature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImprovedPerformanceFeatureFlag.ProtoReflect.Descriptor instead.
func (*ImprovedPerformanceFeatureFlag) Descriptor() ([]byte, []int) {
	return file_zitadel_feature_v2_feature_proto_rawDescGZIP(), []int{1}
}

func (x *ImprovedPerformanceFeatureFlag) GetExecutionPaths() []ImprovedPerformance {
	if x != nil {
		return x.ExecutionPaths
	}
	return nil
}

func (x *ImprovedPerformanceFeatureFlag) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_SOURCE_UNSPECIFIED
}

type LoginV2FeatureFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Required bool    `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	BaseUri  *string `protobuf:"bytes,2,opt,name=base_uri,json=baseUri,proto3,oneof" json:"base_uri,omitempty"`
	Source   Source  `protobuf:"varint,3,opt,name=source,proto3,enum=zitadel.feature.v2.Source" json:"source,omitempty"`
}

func (x *LoginV2FeatureFlag) Reset() {
	*x = LoginV2FeatureFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_feature_v2_feature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginV2FeatureFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginV2FeatureFlag) ProtoMessage() {}

func (x *LoginV2FeatureFlag) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_feature_v2_feature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginV2FeatureFlag.ProtoReflect.Descriptor instead.
func (*LoginV2FeatureFlag) Descriptor() ([]byte, []int) {
	return file_zitadel_feature_v2_feature_proto_rawDescGZIP(), []int{2}
}

func (x *LoginV2FeatureFlag) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *LoginV2FeatureFlag) GetBaseUri() string {
	if x != nil && x.BaseUri != nil {
		return *x.BaseUri
	}
	return ""
}

func (x *LoginV2FeatureFlag) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_SOURCE_UNSPECIFIED
}

type LoginV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Require that all users must use the new login UI. If enabled, all users will be redirected to the login V2 regardless of the application's preference.
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	// Optionally specify a base uri of the login UI. If unspecified the default URI will be used.
	BaseUri *string `protobuf:"bytes,2,opt,name=base_uri,json=baseUri,proto3,oneof" json:"base_uri,omitempty"`
}

func (x *LoginV2) Reset() {
	*x = LoginV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_feature_v2_feature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginV2) ProtoMessage() {}

func (x *LoginV2) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_feature_v2_feature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginV2.ProtoReflect.Descriptor instead.
func (*LoginV2) Descriptor() ([]byte, []int) {
	return file_zitadel_feature_v2_feature_proto_rawDescGZIP(), []int{3}
}

func (x *LoginV2) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *LoginV2) GetBaseUri() string {
	if x != nil && x.BaseUri != nil {
		return *x.BaseUri
	}
	return ""
}

var File_zitadel_feature_v2_feature_proto protoreflect.FileDescriptor

var file_zitadel_feature_v2_feature_proto_rawDesc = []byte{
	0x0a, 0x20, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2f, 0x76, 0x32, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x43, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x29, 0x92, 0x41, 0x26, 0x32, 0x1d, 0x57, 0x68,
	0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x61, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20,
	0x69, 0x73, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x4a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0xc3, 0x01, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x8e, 0x01, 0x92, 0x41, 0x8a, 0x01, 0x32,
	0x87, 0x01, 0x54, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x77, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x77, 0x61,
	0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x20, 0x54, 0x68, 0x65, 0x20, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 0x66,
	0x20, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x69, 0x6e, 0x68,
	0x65, 0x72, 0x69, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xf5, 0x02, 0x0a, 0x1e, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x3a, 0x92, 0x41, 0x37, 0x32, 0x30, 0x57, 0x68,
	0x69, 0x63, 0x68, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4a, 0x03,
	0x5b, 0x31, 0x5d, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x12, 0xc3, 0x01, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x8e, 0x01, 0x92, 0x41, 0x8a, 0x01, 0x32, 0x87, 0x01, 0x54, 0x68, 0x65, 0x20, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x77, 0x61, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x2e, 0x20, 0x54, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6d, 0x61,
	0x79, 0x20, 0x62, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 0x66, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x20, 0x74, 0x68, 0x72,
	0x6f, 0x75, 0x67, 0x68, 0x20, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x12, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x56, 0x32, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0xc3, 0x01, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x8e, 0x01, 0x92, 0x41, 0x8a, 0x01,
	0x32, 0x87, 0x01, 0x54, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x77,
	0x61, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x20, 0x54, 0x68, 0x65, 0x20,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c,
	0x66, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x69, 0x6e,
	0x68, 0x65, 0x72, 0x69, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x22,
	0x52, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65,
	0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x75, 0x72, 0x69, 0x2a, 0x9c, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x07, 0x22, 0x04, 0x08, 0x01,
	0x10, 0x01, 0x2a, 0xfe, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x4d,
	0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e,
	0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x49, 0x4d, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4d, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4d,
	0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e,
	0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x10, 0x04, 0x12,
	0x2c, 0x0a, 0x28, 0x49, 0x4d, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x5f, 0x44, 0x4f, 0x4d, 0x41,
	0x49, 0x4e, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x05, 0x22, 0x04, 0x08,
	0x01, 0x10, 0x01, 0x2a, 0x1e, 0x49, 0x4d, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45,
	0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x5f, 0x42, 0x59,
	0x5f, 0x49, 0x44, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_feature_v2_feature_proto_rawDescOnce sync.Once
	file_zitadel_feature_v2_feature_proto_rawDescData = file_zitadel_feature_v2_feature_proto_rawDesc
)

func file_zitadel_feature_v2_feature_proto_rawDescGZIP() []byte {
	file_zitadel_feature_v2_feature_proto_rawDescOnce.Do(func() {
		file_zitadel_feature_v2_feature_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_feature_v2_feature_proto_rawDescData)
	})
	return file_zitadel_feature_v2_feature_proto_rawDescData
}

var file_zitadel_feature_v2_feature_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_zitadel_feature_v2_feature_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_zitadel_feature_v2_feature_proto_goTypes = []interface{}{
	(Source)(0),                            // 0: zitadel.feature.v2.Source
	(ImprovedPerformance)(0),               // 1: zitadel.feature.v2.ImprovedPerformance
	(*FeatureFlag)(nil),                    // 2: zitadel.feature.v2.FeatureFlag
	(*ImprovedPerformanceFeatureFlag)(nil), // 3: zitadel.feature.v2.ImprovedPerformanceFeatureFlag
	(*LoginV2FeatureFlag)(nil),             // 4: zitadel.feature.v2.LoginV2FeatureFlag
	(*LoginV2)(nil),                        // 5: zitadel.feature.v2.LoginV2
}
var file_zitadel_feature_v2_feature_proto_depIdxs = []int32{
	0, // 0: zitadel.feature.v2.FeatureFlag.source:type_name -> zitadel.feature.v2.Source
	1, // 1: zitadel.feature.v2.ImprovedPerformanceFeatureFlag.execution_paths:type_name -> zitadel.feature.v2.ImprovedPerformance
	0, // 2: zitadel.feature.v2.ImprovedPerformanceFeatureFlag.source:type_name -> zitadel.feature.v2.Source
	0, // 3: zitadel.feature.v2.LoginV2FeatureFlag.source:type_name -> zitadel.feature.v2.Source
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_zitadel_feature_v2_feature_proto_init() }
func file_zitadel_feature_v2_feature_proto_init() {
	if File_zitadel_feature_v2_feature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_feature_v2_feature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_feature_v2_feature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImprovedPerformanceFeatureFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_feature_v2_feature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginV2FeatureFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_feature_v2_feature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_feature_v2_feature_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_zitadel_feature_v2_feature_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_feature_v2_feature_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_feature_v2_feature_proto_goTypes,
		DependencyIndexes: file_zitadel_feature_v2_feature_proto_depIdxs,
		EnumInfos:         file_zitadel_feature_v2_feature_proto_enumTypes,
		MessageInfos:      file_zitadel_feature_v2_feature_proto_msgTypes,
	}.Build()
	File_zitadel_feature_v2_feature_proto = out.File
	file_zitadel_feature_v2_feature_proto_rawDesc = nil
	file_zitadel_feature_v2_feature_proto_goTypes = nil
	file_zitadel_feature_v2_feature_proto_depIdxs = nil
}
